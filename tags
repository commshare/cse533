!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	Stevens/ping/bsdping.c	93;"	d	file:
ACK_HS2	assignment2/utils.h	8;"	d
ADDR	Stevens/debug/backlog.c	4;"	d	file:
ADDR	Stevens/debug/qlen.c	4;"	d	file:
AFI	assignment1/echo_cli.c	3;"	d	file:
AFI	assignment1/echo_srv.c	5;"	d	file:
AFI	assignment1/tcpechotimecli.c	2;"	d	file:
AFI	assignment1/tcpechotimesrv.c	6;"	d	file:
AFI	assignment1/time_cli.c	4;"	d	file:
AFI	assignment1/time_srv.c	4;"	d	file:
AF_INET6	Stevens/libfree/inet_ntop.c	36;"	d	file:
AF_INET6	Stevens/libfree/inet_pton.c	36;"	d	file:
AF_INET6	Stevens/libfree/test_inet_pton.c	4;"	d	file:
AF_LOCAL	Stevens/key/unp.h	154;"	d
AF_LOCAL	Stevens/lib/unp.h	173;"	d
AF_LOCAL	Stevens/libfree/getaddrinfo.c	71;"	d	file:
AF_LOCAL	Stevens/sctp/unp.h	147;"	d
AI_CANONNAME	Stevens/lib/addrinfo.h	23;"	d
AI_CANONNAME	Stevens/libfree/addrinfo.h	23;"	d
AI_CANONNAME	Stevens/libgai/addrinfo.h	23;"	d
AI_CLONE	Stevens/libfree/getaddrinfo.c	119;"	d	file:
AI_CLONE	Stevens/libgai/gai_hdr.h	5;"	d
AI_CLONE	Stevens/libgai/old/savecopy.c	7;"	d	file:
AI_PASSIVE	Stevens/lib/addrinfo.h	22;"	d
AI_PASSIVE	Stevens/libfree/addrinfo.h	22;"	d
AI_PASSIVE	Stevens/libgai/addrinfo.h	22;"	d
ASSGN2	assignment2/Makefile	/^ASSGN2=\/home\/courses\/cse533\/Asgn2_code$/;"	m
Accept	Stevens/lib/wrapsock.c	/^Accept(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f
B	Stevens/ping/bsdping.c	94;"	d	file:
BSPACE	Stevens/ping/bsdping.c	/^char BSPACE = '\\b';		\/* characters written for flood *\/$/;"	v
BUFF	Stevens/test/tshutdown.c	3;"	d	file:
BUFFSIZE	Stevens/key/unp.h	179;"	d
BUFFSIZE	Stevens/lib/unp.h	197;"	d
BUFFSIZE	Stevens/sctp/unp.h	172;"	d
BUFFSIZE	Stevens/threads/example03.c	25;"	d	file:
BUFLEN	Stevens/route/getrt.c	4;"	d	file:
BUFSIZE	Stevens/ping/ping.h	6;"	d
BUFSIZE	Stevens/traceroute/trace.h	7;"	d
Bind	Stevens/lib/wrapsock.c	/^Bind(int fd, const struct sockaddr *sa, socklen_t salen)$/;"	f
CC	Asgn2_code/Makefile	/^CC = gcc$/;"	m
CC	assignment1/Makefile	/^CC = gcc$/;"	m
CC	assignment2/Makefile	/^CC = gcc$/;"	m
CFLAGS	Asgn2_code/Makefile	/^CFLAGS = ${FLAGS} -I\/home\/courses\/cse533\/Stevens\/unpv13e_solaris2.10\/lib$/;"	m
CFLAGS	assignment1/Makefile	/^CFLAGS = ${FLAGS} -I\/home\/courses\/cse533\/Stevens\/unpv13e_solaris2.10\/lib$/;"	m
CFLAGS	assignment2/Makefile	/^CFLAGS = ${FLAGS} -I${HOME}\/lib -I${ASSGN2}\/$/;"	m
CLR	Stevens/ping/bsdping.c	96;"	d	file:
CMD	Stevens/udpcksum/pcap.c	4;"	d	file:
CMSG_LEN	Stevens/key/unp.h	135;"	d
CMSG_LEN	Stevens/lib/unp.h	154;"	d
CMSG_LEN	Stevens/sctp/unp.h	128;"	d
CMSG_SPACE	Stevens/key/unp.h	139;"	d
CMSG_SPACE	Stevens/lib/unp.h	158;"	d
CMSG_SPACE	Stevens/sctp/unp.h	132;"	d
CONTROLLEN	Stevens/sock/loop.c	32;"	d	file:
CONTROLLEN	Stevens/sock/loopudp.c	31;"	d	file:
CONTROL_LEN	Stevens/advio/old/recvfromflags.c	12;"	d	file:
CONTROL_LEN	Stevens/advio/old/test01.c	43;"	d	file:
CONTROL_LEN	Stevens/unixdomain/readcred.c	3;"	d	file:
CONTROL_LEN	Stevens/unixdomain/tfcred01.c	47;"	d	file:
CPU_VENDOR_OS	Stevens/config.h	5;"	d
CPU_VENDOR_OS	Stevens/sparc64-unknown-freebsd5.1/config.h	5;"	d
Calloc	Stevens/lib/wrapunix.c	/^Calloc(size_t n, size_t size)$/;"	f
Child	Stevens/server/child.h	/^} Child;$/;"	t	typeref:struct:__anon3
Close	Stevens/lib/wrapunix.c	/^Close(int fd)$/;"	f
Connect	Stevens/lib/wrapsock.c	/^Connect(int fd, const struct sockaddr *sa, socklen_t salen)$/;"	f
Connect_timeo	Stevens/lib/connect_timeo.c	/^Connect_timeo(int fd, const SA *sa, socklen_t salen, int sec)$/;"	f
DATA_ACK	assignment2/utils.h	12;"	d
DATA_PAYLOAD	assignment2/utils.h	11;"	d
DEFDATALEN	Stevens/ping/bsdping.c	87;"	d	file:
DG	Stevens/sigio/dgecho01.c	/^} DG;$/;"	t	typeref:struct:__anon8	file:
DGLEN	Stevens/udpcliserv/dgcliloop1.c	4;"	d	file:
DGLEN	Stevens/udpcliserv/dgcliloop3.c	7;"	d	file:
DIR_MODE	Stevens/key/unp.h	199;"	d
DIR_MODE	Stevens/lib/unp.h	240;"	d
DIR_MODE	Stevens/sctp/unp.h	199;"	d
DIR_MODE	Stevens/sock/ourhdr.h	29;"	d
DOT	Stevens/ping/bsdping.c	/^char DOT = '.';$/;"	v
Dg_send_recv	Stevens/rtt/dg_send_recv.c	/^Dg_send_recv(int fd, const void *outbuff, size_t outbytes,$/;"	f
Dup2	Stevens/lib/wrapunix.c	/^Dup2(int fd1, int fd2)$/;"	f
EAI_ADDRFAMILY	Stevens/lib/addrinfo.h	36;"	d
EAI_ADDRFAMILY	Stevens/libfree/addrinfo.h	36;"	d
EAI_ADDRFAMILY	Stevens/libgai/addrinfo.h	36;"	d
EAI_AGAIN	Stevens/lib/addrinfo.h	37;"	d
EAI_AGAIN	Stevens/libfree/addrinfo.h	37;"	d
EAI_AGAIN	Stevens/libgai/addrinfo.h	37;"	d
EAI_BADFLAGS	Stevens/lib/addrinfo.h	38;"	d
EAI_BADFLAGS	Stevens/libfree/addrinfo.h	38;"	d
EAI_BADFLAGS	Stevens/libgai/addrinfo.h	38;"	d
EAI_FAIL	Stevens/lib/addrinfo.h	39;"	d
EAI_FAIL	Stevens/libfree/addrinfo.h	39;"	d
EAI_FAIL	Stevens/libgai/addrinfo.h	39;"	d
EAI_FAMILY	Stevens/lib/addrinfo.h	40;"	d
EAI_FAMILY	Stevens/libfree/addrinfo.h	40;"	d
EAI_FAMILY	Stevens/libgai/addrinfo.h	40;"	d
EAI_MEMORY	Stevens/lib/addrinfo.h	41;"	d
EAI_MEMORY	Stevens/libfree/addrinfo.h	41;"	d
EAI_MEMORY	Stevens/libgai/addrinfo.h	41;"	d
EAI_NODATA	Stevens/lib/addrinfo.h	42;"	d
EAI_NODATA	Stevens/libfree/addrinfo.h	42;"	d
EAI_NODATA	Stevens/libgai/addrinfo.h	42;"	d
EAI_NONAME	Stevens/lib/addrinfo.h	43;"	d
EAI_NONAME	Stevens/libfree/addrinfo.h	43;"	d
EAI_NONAME	Stevens/libgai/addrinfo.h	43;"	d
EAI_SERVICE	Stevens/lib/addrinfo.h	44;"	d
EAI_SERVICE	Stevens/libfree/addrinfo.h	44;"	d
EAI_SERVICE	Stevens/libgai/addrinfo.h	44;"	d
EAI_SOCKTYPE	Stevens/lib/addrinfo.h	45;"	d
EAI_SOCKTYPE	Stevens/libfree/addrinfo.h	45;"	d
EAI_SOCKTYPE	Stevens/libgai/addrinfo.h	45;"	d
EAI_SYSTEM	Stevens/lib/addrinfo.h	46;"	d
EAI_SYSTEM	Stevens/libfree/addrinfo.h	46;"	d
EAI_SYSTEM	Stevens/libgai/addrinfo.h	46;"	d
FILE_MODE	Stevens/key/unp.h	197;"	d
FILE_MODE	Stevens/lib/unp.h	238;"	d
FILE_MODE	Stevens/sctp/unp.h	197;"	d
FILE_MODE	Stevens/sock/ourhdr.h	27;"	d
FIN	assignment2/utils.h	13;"	d
FIN_ACK	assignment2/utils.h	14;"	d
FLAGS	Asgn2_code/Makefile	/^FLAGS =  -g -O2$/;"	m
FLAGS	assignment1/Makefile	/^FLAGS = -g -O2$/;"	m
FLAGS	assignment2/Makefile	/^FLAGS =  -g -O2$/;"	m
F_CONNECTING	Stevens/nonblock/web.h	13;"	d
F_CONNECTING	Stevens/threads/web01.c	15;"	d	file:
F_CONNECTING	Stevens/threads/web02.c	16;"	d	file:
F_CONNECTING	Stevens/threads/web03.c	14;"	d	file:
F_DONE	Stevens/nonblock/web.h	15;"	d
F_DONE	Stevens/threads/web01.c	17;"	d	file:
F_DONE	Stevens/threads/web02.c	18;"	d	file:
F_DONE	Stevens/threads/web03.c	16;"	d	file:
F_FLOOD	Stevens/ping/bsdping.c	99;"	d	file:
F_INTERVAL	Stevens/ping/bsdping.c	100;"	d	file:
F_JOINED	Stevens/threads/web02.c	19;"	d	file:
F_JOINED	Stevens/threads/web03.c	17;"	d	file:
F_NUMERIC	Stevens/ping/bsdping.c	101;"	d	file:
F_PINGFILLED	Stevens/ping/bsdping.c	102;"	d	file:
F_QUIET	Stevens/ping/bsdping.c	103;"	d	file:
F_READING	Stevens/nonblock/web.h	14;"	d
F_READING	Stevens/threads/web01.c	16;"	d	file:
F_READING	Stevens/threads/web02.c	17;"	d	file:
F_READING	Stevens/threads/web03.c	15;"	d	file:
F_RROUTE	Stevens/ping/bsdping.c	104;"	d	file:
F_SO_DEBUG	Stevens/ping/bsdping.c	105;"	d	file:
F_SO_DONTROUTE	Stevens/ping/bsdping.c	106;"	d	file:
F_VERBOSE	Stevens/ping/bsdping.c	107;"	d	file:
Family_to_level	Stevens/lib/family_to_level.c	/^Family_to_level(int family)$/;"	f
Fclose	Stevens/lib/wrapstdio.c	/^Fclose(FILE *fp)$/;"	f
Fcntl	Stevens/lib/wrapunix.c	/^Fcntl(int fd, int cmd, int arg)$/;"	f
Fdopen	Stevens/lib/wrapstdio.c	/^Fdopen(int fd, const char *type)$/;"	f
Fgets	Stevens/lib/wrapstdio.c	/^Fgets(char *ptr, int n, FILE *stream)$/;"	f
Fopen	Stevens/lib/wrapstdio.c	/^Fopen(const char *filename, const char *mode)$/;"	f
Fork	Stevens/lib/wrapunix.c	/^Fork(void)$/;"	f
Fputs	Stevens/lib/wrapstdio.c	/^Fputs(const char *ptr, FILE *stream)$/;"	f
GET_CMD	Stevens/nonblock/web.h	17;"	d
GET_CMD	Stevens/threads/web01.c	19;"	d	file:
GET_CMD	Stevens/threads/web03.c	19;"	d	file:
Get_ifi_info	Stevens/lib/get_ifi_info.c	/^Get_ifi_info(int family, int doaliases)$/;"	f
Get_ifi_info	Stevens/route/get_ifi_info.c	/^Get_ifi_info(int family, int doaliases)$/;"	f
Get_ifi_info_plus	Asgn2_code/get_ifi_info_plus.c	/^Get_ifi_info_plus(int family, int doaliases)$/;"	f
Getpeername	Stevens/lib/wrapsock.c	/^Getpeername(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f
Getsockname	Stevens/lib/wrapsock.c	/^Getsockname(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f
Getsockopt	Stevens/lib/wrapsock.c	/^Getsockopt(int fd, int level, int optname, void *optval, socklen_t *optlenptr)$/;"	f
Gettimeofday	Stevens/lib/wrapunix.c	/^Gettimeofday(struct timeval *tv, void *foo)$/;"	f
HAVE_ADDRINFO_STRUCT	Stevens/config.h	8;"	d
HAVE_ADDRINFO_STRUCT	Stevens/sparc64-unknown-freebsd5.1/config.h	8;"	d
HAVE_ARPA_INET_H	Stevens/config.h	11;"	d
HAVE_ARPA_INET_H	Stevens/sparc64-unknown-freebsd5.1/config.h	11;"	d
HAVE_BZERO	Stevens/config.h	14;"	d
HAVE_BZERO	Stevens/sparc64-unknown-freebsd5.1/config.h	14;"	d
HAVE_DEV_TCP	Stevens/config.h	20;"	d
HAVE_ERRNO_H	Stevens/config.h	26;"	d
HAVE_ERRNO_H	Stevens/sparc64-unknown-freebsd5.1/config.h	26;"	d
HAVE_FCNTL_H	Stevens/config.h	29;"	d
HAVE_FCNTL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	29;"	d
HAVE_GETADDRINFO	Stevens/config.h	32;"	d
HAVE_GETADDRINFO	Stevens/sparc64-unknown-freebsd5.1/config.h	32;"	d
HAVE_GETADDRINFO_PROTO	Stevens/config.h	35;"	d
HAVE_GETADDRINFO_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	35;"	d
HAVE_GETHOSTBYNAME2	Stevens/sparc64-unknown-freebsd5.1/config.h	38;"	d
HAVE_GETHOSTBYNAME_R	Stevens/config.h	41;"	d
HAVE_GETHOSTNAME	Stevens/config.h	44;"	d
HAVE_GETHOSTNAME	Stevens/sparc64-unknown-freebsd5.1/config.h	44;"	d
HAVE_GETHOSTNAME_PROTO	Stevens/config.h	47;"	d
HAVE_GETHOSTNAME_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	47;"	d
HAVE_GETNAMEINFO	Stevens/config.h	50;"	d
HAVE_GETNAMEINFO	Stevens/sparc64-unknown-freebsd5.1/config.h	50;"	d
HAVE_GETNAMEINFO_PROTO	Stevens/config.h	53;"	d
HAVE_GETNAMEINFO_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	53;"	d
HAVE_GETRUSAGE_PROTO	Stevens/config.h	56;"	d
HAVE_GETRUSAGE_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	56;"	d
HAVE_HSTRERROR	Stevens/config.h	59;"	d
HAVE_HSTRERROR	Stevens/sparc64-unknown-freebsd5.1/config.h	59;"	d
HAVE_HSTRERROR_PROTO	Stevens/config.h	62;"	d
HAVE_HSTRERROR_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	62;"	d
HAVE_IF_NAMEINDEX_STRUCT	Stevens/config.h	65;"	d
HAVE_IF_NAMEINDEX_STRUCT	Stevens/sparc64-unknown-freebsd5.1/config.h	65;"	d
HAVE_IF_NAMETOINDEX	Stevens/config.h	68;"	d
HAVE_IF_NAMETOINDEX	Stevens/sparc64-unknown-freebsd5.1/config.h	68;"	d
HAVE_IF_NAMETOINDEX_PROTO	Stevens/config.h	71;"	d
HAVE_IF_NAMETOINDEX_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	71;"	d
HAVE_INET6_RTH_INIT	Stevens/config.h	74;"	d
HAVE_INET_ATON	Stevens/config.h	77;"	d
HAVE_INET_ATON	Stevens/sparc64-unknown-freebsd5.1/config.h	74;"	d
HAVE_INET_ATON_PROTO	Stevens/config.h	80;"	d
HAVE_INET_ATON_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	77;"	d
HAVE_INET_PTON	Stevens/config.h	83;"	d
HAVE_INET_PTON	Stevens/sparc64-unknown-freebsd5.1/config.h	80;"	d
HAVE_INET_PTON_PROTO	Stevens/config.h	86;"	d
HAVE_INET_PTON_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	83;"	d
HAVE_KEVENT	Stevens/sparc64-unknown-freebsd5.1/config.h	86;"	d
HAVE_KQUEUE	Stevens/sparc64-unknown-freebsd5.1/config.h	89;"	d
HAVE_LIBNSL	Stevens/config.h	95;"	d
HAVE_LIBPTHREAD	Stevens/config.h	98;"	d
HAVE_LIBRESOLV	Stevens/config.h	104;"	d
HAVE_MKSTEMP	Stevens/config.h	110;"	d
HAVE_MKSTEMP	Stevens/sparc64-unknown-freebsd5.1/config.h	107;"	d
HAVE_MSGHDR_MSG_CONTROL	Stevens/sparc64-unknown-freebsd5.1/config.h	110;"	d
HAVE_NETCONFIG_H	Stevens/config.h	116;"	d
HAVE_NETCONFIG_H	Stevens/sparc64-unknown-freebsd5.1/config.h	113;"	d
HAVE_NETDB_H	Stevens/config.h	119;"	d
HAVE_NETDB_H	Stevens/sparc64-unknown-freebsd5.1/config.h	116;"	d
HAVE_NETDIR_H	Stevens/config.h	122;"	d
HAVE_NETINET_IN_H	Stevens/config.h	125;"	d
HAVE_NETINET_IN_H	Stevens/sparc64-unknown-freebsd5.1/config.h	122;"	d
HAVE_NET_IF_DL_H	Stevens/config.h	128;"	d
HAVE_NET_IF_DL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	125;"	d
HAVE_POLL	Stevens/config.h	131;"	d
HAVE_POLL	Stevens/sparc64-unknown-freebsd5.1/config.h	128;"	d
HAVE_POLL_H	Stevens/config.h	134;"	d
HAVE_POLL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	131;"	d
HAVE_PSELECT	Stevens/config.h	137;"	d
HAVE_PSELECT	Stevens/sparc64-unknown-freebsd5.1/config.h	134;"	d
HAVE_PSELECT_PROTO	Stevens/config.h	140;"	d
HAVE_PSELECT_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	137;"	d
HAVE_PTHREAD_H	Stevens/config.h	143;"	d
HAVE_PTHREAD_H	Stevens/sparc64-unknown-freebsd5.1/config.h	140;"	d
HAVE_SIGNAL_H	Stevens/config.h	146;"	d
HAVE_SIGNAL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	143;"	d
HAVE_SNPRINTF	Stevens/config.h	149;"	d
HAVE_SNPRINTF	Stevens/sparc64-unknown-freebsd5.1/config.h	146;"	d
HAVE_SNPRINTF_PROTO	Stevens/config.h	152;"	d
HAVE_SNPRINTF_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	149;"	d
HAVE_SOCKADDR_DL_STRUCT	Stevens/config.h	155;"	d
HAVE_SOCKADDR_DL_STRUCT	Stevens/sparc64-unknown-freebsd5.1/config.h	152;"	d
HAVE_SOCKADDR_SA_LEN	Stevens/sparc64-unknown-freebsd5.1/config.h	155;"	d
HAVE_SOCKATMARK	Stevens/config.h	161;"	d
HAVE_SOCKATMARK	Stevens/sparc64-unknown-freebsd5.1/config.h	158;"	d
HAVE_SOCKATMARK_PROTO	Stevens/config.h	164;"	d
HAVE_SOCKATMARK_PROTO	Stevens/sparc64-unknown-freebsd5.1/config.h	161;"	d
HAVE_STDIO_H	Stevens/config.h	167;"	d
HAVE_STDIO_H	Stevens/sparc64-unknown-freebsd5.1/config.h	164;"	d
HAVE_STDLIB_H	Stevens/config.h	170;"	d
HAVE_STDLIB_H	Stevens/sparc64-unknown-freebsd5.1/config.h	167;"	d
HAVE_STRINGS_H	Stevens/config.h	173;"	d
HAVE_STRINGS_H	Stevens/sparc64-unknown-freebsd5.1/config.h	170;"	d
HAVE_STRING_H	Stevens/config.h	176;"	d
HAVE_STRING_H	Stevens/sparc64-unknown-freebsd5.1/config.h	173;"	d
HAVE_STROPTS_H	Stevens/config.h	179;"	d
HAVE_STRUCT_IFREQ_IFR_MTU	Stevens/sparc64-unknown-freebsd5.1/config.h	179;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	Stevens/config.h	185;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	Stevens/sparc64-unknown-freebsd5.1/config.h	182;"	d
HAVE_SYS_EVENT_H	Stevens/sparc64-unknown-freebsd5.1/config.h	185;"	d
HAVE_SYS_FILIO_H	Stevens/config.h	191;"	d
HAVE_SYS_FILIO_H	Stevens/sparc64-unknown-freebsd5.1/config.h	188;"	d
HAVE_SYS_IOCTL_H	Stevens/config.h	194;"	d
HAVE_SYS_IOCTL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	191;"	d
HAVE_SYS_PARAM_H	Stevens/config.h	197;"	d
HAVE_SYS_SELECT_H	Stevens/config.h	200;"	d
HAVE_SYS_SELECT_H	Stevens/sparc64-unknown-freebsd5.1/config.h	194;"	d
HAVE_SYS_SOCKET_H	Stevens/config.h	203;"	d
HAVE_SYS_SOCKET_H	Stevens/sparc64-unknown-freebsd5.1/config.h	197;"	d
HAVE_SYS_SOCKIO_H	Stevens/config.h	206;"	d
HAVE_SYS_SOCKIO_H	Stevens/sparc64-unknown-freebsd5.1/config.h	200;"	d
HAVE_SYS_STAT_H	Stevens/config.h	209;"	d
HAVE_SYS_STAT_H	Stevens/sparc64-unknown-freebsd5.1/config.h	203;"	d
HAVE_SYS_SYSCTL_H	Stevens/sparc64-unknown-freebsd5.1/config.h	206;"	d
HAVE_SYS_TIME_H	Stevens/config.h	215;"	d
HAVE_SYS_TIME_H	Stevens/sparc64-unknown-freebsd5.1/config.h	209;"	d
HAVE_SYS_TYPES_H	Stevens/config.h	218;"	d
HAVE_SYS_TYPES_H	Stevens/sparc64-unknown-freebsd5.1/config.h	212;"	d
HAVE_SYS_UIO_H	Stevens/config.h	221;"	d
HAVE_SYS_UIO_H	Stevens/sparc64-unknown-freebsd5.1/config.h	215;"	d
HAVE_SYS_UN_H	Stevens/config.h	224;"	d
HAVE_SYS_UN_H	Stevens/sparc64-unknown-freebsd5.1/config.h	218;"	d
HAVE_SYS_WAIT_H	Stevens/config.h	227;"	d
HAVE_SYS_WAIT_H	Stevens/sparc64-unknown-freebsd5.1/config.h	221;"	d
HAVE_TIMESPEC_STRUCT	Stevens/config.h	230;"	d
HAVE_TIMESPEC_STRUCT	Stevens/sparc64-unknown-freebsd5.1/config.h	224;"	d
HAVE_TIME_H	Stevens/config.h	233;"	d
HAVE_TIME_H	Stevens/sparc64-unknown-freebsd5.1/config.h	227;"	d
HAVE_UNISTD_H	Stevens/config.h	236;"	d
HAVE_UNISTD_H	Stevens/sparc64-unknown-freebsd5.1/config.h	230;"	d
HAVE_VSNPRINTF	Stevens/config.h	239;"	d
HAVE_VSNPRINTF	Stevens/sparc64-unknown-freebsd5.1/config.h	233;"	d
HAVE_XTI_H	Stevens/config.h	242;"	d
HAVE_XTI_INET_H	Stevens/config.h	245;"	d
HENTBUFSIZ	Stevens/libfree/getaddrinfo.c	115;"	d	file:
HENTBUFSIZ	Stevens/libfree/getnameinfo.c	42;"	d	file:
HENTMAXADDR	Stevens/libfree/getaddrinfo.c	116;"	d	file:
HOME	assignment2/Makefile	/^HOME=\/home\/courses\/cse533\/Stevens\/unpv13e_solaris2.10$/;"	m
Host_serv	Stevens/lib/host_serv.c	/^Host_serv(const char *host, const char *serv, int family, int socktype)$/;"	f
ICMPD_PATH	Stevens/icmpd/unpicmpd.h	6;"	d
ICMPV6_DEST_UNREACH	Stevens/ping/old/icmp6.h	21;"	d
ICMPV6_DEST_UNREACH_ADDR	Stevens/ping/old/icmp6.h	38;"	d
ICMPV6_DEST_UNREACH_ADMIN	Stevens/ping/old/icmp6.h	35;"	d
ICMPV6_DEST_UNREACH_NOPORT	Stevens/ping/old/icmp6.h	39;"	d
ICMPV6_DEST_UNREACH_NOROUTE	Stevens/ping/old/icmp6.h	34;"	d
ICMPV6_DEST_UNREACH_NOTNEIGHBOR	Stevens/ping/old/icmp6.h	37;"	d
ICMPV6_ECHORPLY	Stevens/ping/old/icmp6.h	29;"	d
ICMPV6_ECHORQST	Stevens/ping/old/icmp6.h	28;"	d
ICMPV6_INFOMSG_MASK	Stevens/ping/old/icmp6.h	26;"	d
ICMPV6_MGM_QUERY	Stevens/ping/old/icmp6.h	30;"	d
ICMPV6_MGM_REDUCTION	Stevens/ping/old/icmp6.h	32;"	d
ICMPV6_MGM_REPORT	Stevens/ping/old/icmp6.h	31;"	d
ICMPV6_PARAMPROB	Stevens/ping/old/icmp6.h	24;"	d
ICMPV6_PARAMPROB_HDR	Stevens/ping/old/icmp6.h	44;"	d
ICMPV6_PARAMPROB_NXT_HDR	Stevens/ping/old/icmp6.h	45;"	d
ICMPV6_PARAMPROB_OPTS	Stevens/ping/old/icmp6.h	46;"	d
ICMPV6_PKT_TOOBIG	Stevens/ping/old/icmp6.h	22;"	d
ICMPV6_TIME_EXCEED	Stevens/ping/old/icmp6.h	23;"	d
ICMPV6_TIME_EXCEED_HOPS	Stevens/ping/old/icmp6.h	41;"	d
ICMPV6_TIME_EXCEED_REASSEMBLY	Stevens/ping/old/icmp6.h	42;"	d
IFI_ALIAS	Asgn2_code/unpifiplus.h	34;"	d
IFI_ALIAS	Stevens/lib/unpifi.h	27;"	d
IFI_HADDR	Asgn2_code/unpifiplus.h	11;"	d
IFI_HADDR	Stevens/lib/unpifi.h	11;"	d
IFI_NAME	Asgn2_code/unpifiplus.h	10;"	d
IFI_NAME	Stevens/lib/unpifi.h	10;"	d
IN6ADDRSZ	Stevens/libfree/inet_ntop.c	32;"	d	file:
IN6ADDRSZ	Stevens/libfree/inet_pton.c	31;"	d	file:
INADDRSZ	Stevens/libfree/inet_pton.c	32;"	d	file:
INADDR_NONE	Stevens/key/unp.h	79;"	d
INADDR_NONE	Stevens/lib/unp.h	98;"	d
INADDR_NONE	Stevens/sctp/unp.h	72;"	d
INET6	Stevens/libfree/getaddrinfo.c	23;"	d	file:
INET6_ADDRSTRLEN	Stevens/key/unp.h	102;"	d
INET6_ADDRSTRLEN	Stevens/lib/unp.h	121;"	d
INET6_ADDRSTRLEN	Stevens/sctp/unp.h	95;"	d
INET_ADDRSTRLEN	Stevens/key/unp.h	94;"	d
INET_ADDRSTRLEN	Stevens/lib/unp.h	113;"	d
INET_ADDRSTRLEN	Stevens/libfree/inet_ntop_ipv4.c	7;"	d	file:
INET_ADDRSTRLEN	Stevens/sctp/unp.h	87;"	d
INET_NTOA	Stevens/sock/sock.h	78;"	d
INET_NTOA	Stevens/sock/sock.h	80;"	d
INFTIM	Stevens/debug/unpxti.h	19;"	d
INFTIM	Stevens/key/unp.h	165;"	d
INFTIM	Stevens/lib/unp.h	184;"	d
INFTIM	Stevens/sctp/unp.h	158;"	d
INFTIM	Stevens/streams/unpxti.h	19;"	d
INFTIM_UNPH	Stevens/key/unp.h	168;"	d
INFTIM_UNPH	Stevens/lib/unp.h	187;"	d
INFTIM_UNPH	Stevens/sctp/unp.h	161;"	d
INT16SZ	Stevens/libfree/inet_ntop.c	33;"	d	file:
INT16SZ	Stevens/libfree/inet_pton.c	33;"	d	file:
IPV4	Stevens/config.h	248;"	d
IPV4	Stevens/libfree/getaddrinfo.c	53;"	d	file:
IPV4	Stevens/libfree/getnameinfo.c	30;"	d	file:
IPV4	Stevens/sparc64-unknown-freebsd5.1/config.h	242;"	d
IPV6	Stevens/config.h	251;"	d
IPV6	Stevens/libfree/getaddrinfo.c	58;"	d	file:
IPV6	Stevens/libfree/getaddrinfo.c	60;"	d	file:
IPV6	Stevens/libfree/getnameinfo.c	33;"	d	file:
IPV6	Stevens/sparc64-unknown-freebsd5.1/config.h	245;"	d
IPv4	Stevens/config.h	254;"	d
IPv4	Stevens/sparc64-unknown-freebsd5.1/config.h	248;"	d
IPv6	Stevens/config.h	257;"	d
IPv6	Stevens/sparc64-unknown-freebsd5.1/config.h	251;"	d
If_indextoname	Stevens/lib/if_indextoname.c	/^If_indextoname(unsigned int index, char *name)$/;"	f
If_indextoname	Stevens/libroute/if_indextoname.c	/^If_indextoname(unsigned int idx, char *name)$/;"	f
If_nameindex	Stevens/lib/if_nameindex.c	/^If_nameindex(void)$/;"	f
If_nameindex	Stevens/libroute/if_nameindex.c	/^If_nameindex(void)$/;"	f
If_nametoindex	Stevens/lib/if_nametoindex.c	/^If_nametoindex(const char *name)$/;"	f
If_nametoindex	Stevens/libroute/if_nametoindex.c	/^If_nametoindex(const char *name)$/;"	f
Inet6_rth_add	Stevens/lib/wrapsock.c	/^Inet6_rth_add(void *rthbuf, const struct in6_addr *addr)$/;"	f
Inet6_rth_getaddr	Stevens/lib/wrapsock.c	/^Inet6_rth_getaddr(const void *rthbuf, int idx)$/;"	f
Inet6_rth_init	Stevens/lib/wrapsock.c	/^Inet6_rth_init(void *rthbuf, socklen_t rthlen, int type, int segments)$/;"	f
Inet6_rth_reverse	Stevens/lib/wrapsock.c	/^Inet6_rth_reverse(const void *in, void *out)$/;"	f
Inet6_rth_segments	Stevens/lib/wrapsock.c	/^Inet6_rth_segments(const void *rthbuf)$/;"	f
Inet6_rth_space	Stevens/lib/wrapsock.c	/^Inet6_rth_space(int type, int segments)$/;"	f
Inet_ntop	Stevens/lib/wraplib.c	/^Inet_ntop(int family, const void *addrptr, char *strptr, size_t len)$/;"	f
Inet_pton	Stevens/lib/wraplib.c	/^Inet_pton(int family, const char *strptr, void *addrptr)$/;"	f
InterfaceInfo	assignment2/utils.h	/^typedef struct InterfaceInfo {$/;"	s
Ioctl	Stevens/lib/wrapunix.c	/^Ioctl(int fd, int request, void *arg)$/;"	f
JAN_1970	Stevens/ssntp/ntp.h	1;"	d
Kevent	Stevens/lib/wrapsock.c	/^Kevent(int kq, const struct kevent *changelist, int nchanges,$/;"	f
Kqueue	Stevens/lib/wrapsock.c	/^Kqueue(void)$/;"	f
LIBS	Asgn2_code/Makefile	/^LIBS =  -lsocket\\$/;"	m
LIBS	assignment1/Makefile	/^LIBS = -lresolv -lnsl -lpthread -lsocket\\$/;"	m
LIBS	assignment2/Makefile	/^LIBS = -lresolv -lnsl -lsocket -lpthread\\$/;"	m
LISTENQ	Stevens/key/unp.h	174;"	d
LISTENQ	Stevens/lib/unp.h	193;"	d
LISTENQ	Stevens/sctp/unp.h	167;"	d
LOCAL	Stevens/libfree/getaddrinfo.c	68;"	d	file:
LOOPBACK	assignment2/client.c	3;"	d	file:
LOOPBACK	assignment2/server.c	2;"	d	file:
Listen	Stevens/lib/wrapsock.c	/^Listen(int fd, int backlog)$/;"	f
MAXBACKLOG	Stevens/debug/backlog.c	5;"	d	file:
MAXBACKLOG	Stevens/debug/qlen.c	5;"	d	file:
MAXBUF	assignment1/echo_cli.c	2;"	d	file:
MAXBUF	assignment1/echo_srv.c	4;"	d	file:
MAXBUF	assignment1/tcpechotimecli.c	3;"	d	file:
MAXBUF	assignment1/tcpechotimesrv.c	5;"	d	file:
MAXBUF	assignment1/time_cli.c	3;"	d	file:
MAXBUF	assignment1/time_srv.c	3;"	d	file:
MAXDG	Stevens/sigio/dgecho01.c	7;"	d	file:
MAXFD	Stevens/lib/daemon_init.c	4;"	d	file:
MAXFILES	Stevens/nonblock/web.h	3;"	d
MAXFILES	Stevens/threads/web01.c	5;"	d	file:
MAXFILES	Stevens/threads/web02.c	6;"	d	file:
MAXFILES	Stevens/threads/web03.c	4;"	d	file:
MAXICMPLEN	Stevens/ping/bsdping.c	89;"	d	file:
MAXIPLEN	Stevens/ping/bsdping.c	88;"	d	file:
MAXLINE	Stevens/advio/dgechoaddr.c	3;"	d	file:
MAXLINE	Stevens/advio/dgechoaddr.c	4;"	d	file:
MAXLINE	Stevens/advio/old/dgechoaddr.c	3;"	d	file:
MAXLINE	Stevens/advio/old/dgechoaddr.c	4;"	d	file:
MAXLINE	Stevens/key/unp.h	177;"	d
MAXLINE	Stevens/lib/unp.h	196;"	d
MAXLINE	Stevens/sctp/unp.h	170;"	d
MAXLINE	Stevens/sock/ourhdr.h	25;"	d
MAXLINE	Stevens/udpcliserv/dgclibig.c	3;"	d	file:
MAXLINE	Stevens/udpcliserv/dgclibig.c	4;"	d	file:
MAXN	Stevens/server/client.c	3;"	d	file:
MAXN	Stevens/server/clientrst.c	3;"	d	file:
MAXN	Stevens/server/web_child.c	3;"	d	file:
MAXN	Stevens/server/web_child_r.c	4;"	d	file:
MAXNCLI	Stevens/server/pthread08.h	7;"	d
MAXPACKET	Stevens/ping/bsdping.c	90;"	d	file:
MAXSOCKADDR	Stevens/key/unp.h	178;"	d
MAXSOCKADDR	Stevens/sctp/unp.h	171;"	d
MAXWAIT	Stevens/ping/bsdping.c	382;"	d	file:
MAX_DUP_CHK	Stevens/ping/bsdping.c	115;"	d	file:
MCAST	Stevens/config.h	260;"	d
MCAST	Stevens/sparc64-unknown-freebsd5.1/config.h	254;"	d
MODE_BROADCAST	Stevens/ssntp/ntp.h	32;"	d
MODE_CLIENT	Stevens/ssntp/ntp.h	30;"	d
MODE_MASK	Stevens/ssntp/ntp.h	28;"	d
MODE_SERVER	Stevens/ssntp/ntp.h	31;"	d
Malloc	Stevens/lib/wrapunix.c	/^Malloc(size_t size)$/;"	f
Mcast_block_source	Stevens/lib/mcast_join.c	/^Mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f
Mcast_get_if	Stevens/lib/mcast_get_if.c	/^Mcast_get_if(int sockfd)$/;"	f
Mcast_get_loop	Stevens/lib/mcast_get_loop.c	/^Mcast_get_loop(int sockfd)$/;"	f
Mcast_get_ttl	Stevens/lib/mcast_get_ttl.c	/^Mcast_get_ttl(int sockfd)$/;"	f
Mcast_join	Stevens/lib/mcast_join.c	/^Mcast_join(int sockfd, const SA *grp, socklen_t grplen,$/;"	f
Mcast_join_source_group	Stevens/lib/mcast_join.c	/^Mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f
Mcast_leave	Stevens/lib/mcast_leave.c	/^Mcast_leave(int sockfd, const SA *grp, socklen_t grplen)$/;"	f
Mcast_leave_source_group	Stevens/lib/mcast_leave.c	/^Mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f
Mcast_set_if	Stevens/lib/mcast_set_if.c	/^Mcast_set_if(int sockfd, const char *ifname, u_int ifindex)$/;"	f
Mcast_set_loop	Stevens/lib/mcast_set_loop.c	/^Mcast_set_loop(int sockfd, int onoff)$/;"	f
Mcast_set_ttl	Stevens/lib/mcast_set_ttl.c	/^Mcast_set_ttl(int sockfd, int val)$/;"	f
Mcast_unblock_source	Stevens/lib/mcast_join.c	/^Mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f
Mkstemp	Stevens/lib/wrapunix.c	/^Mkstemp(char *template)$/;"	f
Mmap	Stevens/lib/wrapunix.c	/^Mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)$/;"	f
My_addrs	Stevens/lib/my_addrs.c	/^My_addrs(int *pfamily)$/;"	f
NDG	Stevens/udpcliserv/dgcliloop1.c	3;"	d	file:
NDG	Stevens/udpcliserv/dgcliloop3.c	6;"	d	file:
NEXT_SA	Stevens/libroute/get_rtaddrs.c	12;"	d	file:
NI_DGRAM	Stevens/lib/addrinfo.h	33;"	d
NI_DGRAM	Stevens/libfree/addrinfo.h	33;"	d
NI_DGRAM	Stevens/libgai/addrinfo.h	33;"	d
NI_MAXHOST	Stevens/lib/addrinfo.h	26;"	d
NI_MAXHOST	Stevens/libfree/addrinfo.h	26;"	d
NI_MAXHOST	Stevens/libgai/addrinfo.h	26;"	d
NI_MAXSERV	Stevens/lib/addrinfo.h	27;"	d
NI_MAXSERV	Stevens/libfree/addrinfo.h	27;"	d
NI_MAXSERV	Stevens/libgai/addrinfo.h	27;"	d
NI_NAMEREQD	Stevens/lib/addrinfo.h	31;"	d
NI_NAMEREQD	Stevens/libfree/addrinfo.h	31;"	d
NI_NAMEREQD	Stevens/libgai/addrinfo.h	31;"	d
NI_NOFQDN	Stevens/lib/addrinfo.h	29;"	d
NI_NOFQDN	Stevens/libfree/addrinfo.h	29;"	d
NI_NOFQDN	Stevens/libgai/addrinfo.h	29;"	d
NI_NUMERICHOST	Stevens/lib/addrinfo.h	30;"	d
NI_NUMERICHOST	Stevens/libfree/addrinfo.h	30;"	d
NI_NUMERICHOST	Stevens/libgai/addrinfo.h	30;"	d
NI_NUMERICSERV	Stevens/lib/addrinfo.h	32;"	d
NI_NUMERICSERV	Stevens/libfree/addrinfo.h	32;"	d
NI_NUMERICSERV	Stevens/libgai/addrinfo.h	32;"	d
NLOOP	Stevens/threads/example01.c	3;"	d	file:
NLOOP	Stevens/threads/example02.c	3;"	d	file:
NLOOP	Stevens/threads/example03.c	24;"	d	file:
NROUTES	Stevens/ping/bsdping.c	91;"	d	file:
Net_rt_dump	Stevens/libroute/net_rt_dump.c	/^Net_rt_dump(int family, int flags, size_t *lenp)$/;"	f
Net_rt_iflist	Stevens/libroute/net_rt_iflist.c	/^Net_rt_iflist(int family, int flags, size_t *lenp)$/;"	f
OBJS	Stevens/icmpd/Makefile	/^OBJS = icmpd.o readable_listen.o readable_conn.o readable_v4.o readable_v6.o$/;"	m
OBJS	Stevens/key/Makefile	/^OBJS = printsadbmsg.o name.o$/;"	m
OBJS	Stevens/ping/Makefile	/^OBJS = init_v6.o main.o proc_v4.o proc_v6.o readloop.o \\$/;"	m
OBJS	Stevens/sock/Makefile	/^OBJS = buffers.o cliopen.o crlf.o error.o looptcp.o loopudp.o \\$/;"	m
OBJS	Stevens/traceroute/Makefile	/^OBJS = main.o icmpcode_v4.o icmpcode_v6.o recv_v4.o recv_v6.o \\$/;"	m
OBJS	Stevens/udpcksum/Makefile	/^OBJS = main.o cleanup.o pcap.o udpcksum.o senddnsquery-raw.o udpread.o udpwrite.o$/;"	m
OBJSNET	Stevens/udpcksum/Makefile	/^OBJSNET = main.o cleanup.o pcap.o udpcksum.o senddnsquery-libnet.o udpread.o$/;"	m
Open	Stevens/lib/wrapunix.c	/^Open(const char *pathname, int oflag, mode_t mode)$/;"	f
PACKAGE_BUGREPORT	Stevens/config.h	263;"	d
PACKAGE_NAME	Stevens/config.h	266;"	d
PACKAGE_STRING	Stevens/config.h	269;"	d
PACKAGE_TARNAME	Stevens/config.h	272;"	d
PACKAGE_VERSION	Stevens/config.h	275;"	d
PAYLOAD_CHUNK_SIZE	assignment2/utils.h	15;"	d
PF_LOCAL	Stevens/key/unp.h	157;"	d
PF_LOCAL	Stevens/lib/unp.h	176;"	d
PF_LOCAL	Stevens/libfree/getaddrinfo.c	74;"	d	file:
PF_LOCAL	Stevens/sctp/unp.h	150;"	d
PORT	Stevens/debug/backlog.c	3;"	d	file:
PORT	Stevens/debug/qlen.c	3;"	d	file:
PROGS	Stevens/advio/Makefile	/^PROGS =	tcpcli01 tcpcli02 tcpserv02 \\$/;"	m
PROGS	Stevens/bcast/Makefile	/^PROGS =	udpcli01 udpcli02 udpcli03 udpcli04 udpcli05 udpcli06$/;"	m
PROGS	Stevens/debug/Makefile	/^PROGS =	qlen backlog test01 test02 test03 test04 test05 test06$/;"	m
PROGS	Stevens/icmpd/Makefile	/^PROGS =	icmpd udpcli01$/;"	m
PROGS	Stevens/inetd/Makefile	/^PROGS =	daytimetcpsrv2 daytimetcpsrv3$/;"	m
PROGS	Stevens/intro/Makefile	/^PROGS =	daytimetcpcli daytimetcpcli1 daytimetcpcli2 daytimetcpcli3 \\$/;"	m
PROGS	Stevens/ioctl/Makefile	/^PROGS =	lsif01 lsif02 prifinfo prmac$/;"	m
PROGS	Stevens/ipopts/Makefile	/^PROGS =	tcpcli01 tcpserv01$/;"	m
PROGS	Stevens/key/Makefile	/^PROGS =	dump register add$/;"	m
PROGS	Stevens/libgai/Makefile	/^PROGS = testga test1$/;"	m
PROGS	Stevens/mcast/Makefile	/^PROGS =	sendrecv udpcli05 udpcli06 udpserv01$/;"	m
PROGS	Stevens/mysdr/Makefile	/^PROGS =	mysdr$/;"	m
PROGS	Stevens/names/Makefile	/^PROGS =	daytimetcpcli daytimetcpcli1 daytimetcpsrv1 daytimetcpsrv2 \\$/;"	m
PROGS	Stevens/nonblock/Makefile	/^PROGS =	daytimetcpcli tcpcli01 tcpcli02 tcpcli03 tcpcli04 tcpservselect02 web$/;"	m
PROGS	Stevens/oob/Makefile	/^PROGS =	tcprecv01 tcprecv02 tcprecv03 tcprecv04 tcprecv05 tcprecv06 \\$/;"	m
PROGS	Stevens/ping/Makefile	/^PROGS =	ping$/;"	m
PROGS	Stevens/route/Makefile	/^PROGS =	checkudpsum getrt mynetstat \\$/;"	m
PROGS	Stevens/rtt/Makefile	/^PROGS =	udpcli01$/;"	m
PROGS	Stevens/sctp/Makefile	/^PROGS =	sctpserv01 sctpclient01 sctpserv02 sctpserv03 sctpclient02 sctpserv04 \\$/;"	m
PROGS	Stevens/select/Makefile	/^PROGS =	tcpcli01 tcpcli02 tcpcli03$/;"	m
PROGS	Stevens/server/Makefile	/^PROGS =	client clientrst \\$/;"	m
PROGS	Stevens/sigio/Makefile	/^PROGS =	udpcli01 udpserv01$/;"	m
PROGS	Stevens/sock/Makefile	/^PROGS =	sock$/;"	m
PROGS	Stevens/sockopt/Makefile	/^PROGS =	checkopts prdefaults rcvbuf rcvbufset sockopt$/;"	m
PROGS	Stevens/ssntp/Makefile	/^PROGS =	ssntp$/;"	m
PROGS	Stevens/streams/Makefile	/^PROGS =	strlist_sock strlist_xti tpi_daytime$/;"	m
PROGS	Stevens/tcpcliserv/Makefile	/^PROGS =	tcpcli01 tcpcli04 tcpcli05 tcpcli06 \\$/;"	m
PROGS	Stevens/test/Makefile	/^PROGS =	accept_eintr test1 treadline1 treadline2 treadline3 \\$/;"	m
PROGS	Stevens/threads/Makefile	/^PROGS =	web01 web02 web03 \\$/;"	m
PROGS	Stevens/traceroute/Makefile	/^PROGS =	traceroute$/;"	m
PROGS	Stevens/udpcksum/Makefile	/^PROGS =	udpcksum udpcksum-libnet$/;"	m
PROGS	Stevens/udpcliserv/Makefile	/^PROGS =	udpcli01 udpserv01 udpcli02 udpcli03 udpcli04 \\$/;"	m
PROGS	Stevens/unixdomain/Makefile	/^PROGS =	daytimetcpcli daytimetcpsrv2 mycat openfile \\$/;"	m
Packet	assignment2/utils.h	/^typedef struct Packet  {$/;"	s
Pipe	Stevens/lib/wrapunix.c	/^Pipe(int *fds)$/;"	f
Poll	Stevens/lib/wrapsock.c	/^Poll(struct pollfd *fdarray, unsigned long nfds, int timeout)$/;"	f
Pthread_cond_broadcast	Stevens/lib/wrappthread.c	/^Pthread_cond_broadcast(pthread_cond_t *cptr)$/;"	f
Pthread_cond_signal	Stevens/lib/wrappthread.c	/^Pthread_cond_signal(pthread_cond_t *cptr)$/;"	f
Pthread_cond_signal	Stevens/threads/example03.c	18;"	d	file:
Pthread_cond_timedwait	Stevens/lib/wrappthread.c	/^Pthread_cond_timedwait(pthread_cond_t *cptr, pthread_mutex_t *mptr,$/;"	f
Pthread_cond_wait	Stevens/lib/wrappthread.c	/^Pthread_cond_wait(pthread_cond_t *cptr, pthread_mutex_t *mptr)$/;"	f
Pthread_cond_wait	Stevens/threads/example03.c	13;"	d	file:
Pthread_create	Stevens/lib/wrappthread.c	/^Pthread_create(pthread_t *tid, const pthread_attr_t *attr,$/;"	f
Pthread_detach	Stevens/lib/wrappthread.c	/^Pthread_detach(pthread_t tid)$/;"	f
Pthread_join	Stevens/lib/wrappthread.c	/^Pthread_join(pthread_t tid, void **status)$/;"	f
Pthread_key_create	Stevens/lib/wrappthread.c	/^Pthread_key_create(pthread_key_t *key, void (*func)(void *))$/;"	f
Pthread_kill	Stevens/lib/wrappthread.c	/^Pthread_kill(pthread_t tid, int signo)$/;"	f
Pthread_mutex_init	Stevens/lib/wrappthread.c	/^Pthread_mutex_init(pthread_mutex_t *mptr, pthread_mutexattr_t *attr)$/;"	f
Pthread_mutex_lock	Stevens/lib/wrappthread.c	/^Pthread_mutex_lock(pthread_mutex_t *mptr)$/;"	f
Pthread_mutex_lock	Stevens/threads/example03.c	3;"	d	file:
Pthread_mutex_unlock	Stevens/lib/wrappthread.c	/^Pthread_mutex_unlock(pthread_mutex_t *mptr)$/;"	f
Pthread_mutex_unlock	Stevens/threads/example03.c	8;"	d	file:
Pthread_mutexattr_init	Stevens/lib/wrappthread.c	/^Pthread_mutexattr_init(pthread_mutexattr_t *attr)$/;"	f
Pthread_mutexattr_setpshared	Stevens/lib/wrappthread.c	/^Pthread_mutexattr_setpshared(pthread_mutexattr_t *attr, int flag)$/;"	f
Pthread_once	Stevens/lib/wrappthread.c	/^Pthread_once(pthread_once_t *ptr, void (*func)(void))$/;"	f
Pthread_setspecific	Stevens/lib/wrappthread.c	/^Pthread_setspecific(pthread_key_t key, const void *value)$/;"	f
QSIZE	Stevens/sigio/dgecho01.c	6;"	d	file:
RES_USE_INET6	Stevens/libfree/getaddrinfo.c	509;"	d	file:
ROUNDUP	Stevens/libroute/get_rtaddrs.c	6;"	d	file:
RTT_DEBUG	Stevens/rtt/dg_send_recv.c	5;"	d	file:
RTT_MAXNREXMT	Stevens/lib/unprtt.h	17;"	d
RTT_MAXNREXMT	Stevens/rtt/unprtt.h	17;"	d
RTT_RTOCALC	Stevens/lib/rtt.c	11;"	d	file:
RTT_RXTMAX	Stevens/lib/unprtt.h	16;"	d
RTT_RXTMAX	Stevens/rtt/unprtt.h	16;"	d
RTT_RXTMIN	Stevens/lib/unprtt.h	15;"	d
RTT_RXTMIN	Stevens/rtt/unprtt.h	15;"	d
Read	Stevens/lib/wrapunix.c	/^Read(int fd, void *ptr, size_t nbytes)$/;"	f
Read_fd	Stevens/lib/read_fd.c	/^Read_fd(int fd, void *ptr, size_t nbytes, int *recvfd)$/;"	f
Readable_timeo	Stevens/lib/readable_timeo.c	/^Readable_timeo(int fd, int sec)$/;"	f
Readline	Stevens/lib/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline	Stevens/server/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline	Stevens/test/readline1.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline	Stevens/test/readline2.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline	Stevens/test/readline3.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline	Stevens/threads/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f
Readline_r	Stevens/server/readline_r.c	/^Readline_r(Rline *rptr)$/;"	f
Readn	Stevens/lib/readn.c	/^Readn(int fd, void *ptr, size_t nbytes)$/;"	f
ReceiverQueue	assignment2/utils.h	/^typedef struct ReceiverQueue	{$/;"	s
Recv	Stevens/lib/wrapsock.c	/^Recv(int fd, void *ptr, size_t nbytes, int flags)$/;"	f
RecvWinElem	assignment2/utils.h	/^typedef struct RecvWinElem  {$/;"	s
Recvfrom	Stevens/lib/wrapsock.c	/^Recvfrom(int fd, void *ptr, size_t nbytes, int flags,$/;"	f
Recvfrom_flags	Stevens/advio/old/recvfromflags.c	/^Recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f
Recvfrom_flags	Stevens/advio/recvfromflags.c	/^Recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f
Recvmsg	Stevens/lib/wrapsock.c	/^Recvmsg(int fd, struct msghdr *msg, int flags)$/;"	f
Rline	Stevens/server/readline_r.h	/^} Rline;$/;"	t	typeref:struct:__anon7
Rline	Stevens/test/readline.h	/^} Rline;$/;"	t	typeref:struct:__anon9
Rline	Stevens/threads/readline.c	/^} Rline;$/;"	t	typeref:struct:__anon10	file:
SA	Stevens/key/unp.h	195;"	d
SA	Stevens/lib/unp.h	212;"	d
SA	Stevens/sctp/unp.h	195;"	d
SAP_AUTHLEN_MASK	Stevens/mysdr/mysdr.h	10;"	d
SAP_AUTHLEN_SHIFT	Stevens/mysdr/mysdr.h	11;"	d
SAP_COMPRESSED	Stevens/mysdr/mysdr.h	9;"	d
SAP_DELETE	Stevens/mysdr/mysdr.h	7;"	d
SAP_ENCRYPTED	Stevens/mysdr/mysdr.h	8;"	d
SAP_HASH_MASK	Stevens/mysdr/mysdr.h	12;"	d
SAP_IPV6	Stevens/mysdr/mysdr.h	6;"	d
SAP_NAME	Stevens/mysdr/main.c	3;"	d	file:
SAP_PORT	Stevens/mysdr/main.c	4;"	d	file:
SAP_VERSION	Stevens/mysdr/mysdr.h	3;"	d
SAP_VERSION_MASK	Stevens/mysdr/mysdr.h	4;"	d
SAP_VERSION_SHIFT	Stevens/mysdr/mysdr.h	5;"	d
SCTP_DISABLE_HB	Stevens/sctp/unp.h	279;"	d
SCTP_MAXLINE	Stevens/sctp/sctp_strcliecho.c	3;"	d	file:
SCTP_MAXLINE	Stevens/sctp/sctp_strcliecho2.c	3;"	d	file:
SCTP_ON_DEMAND_HB	Stevens/sctp/unp.h	277;"	d
SCTP_PDAPI_INCR_SZ	Stevens/sctp/unp.h	178;"	d
SCTP_PDAPI_NEED_MORE_THRESHOLD	Stevens/sctp/unp.h	179;"	d
SCTP_SET_HB_INTERVAL	Stevens/sctp/unp.h	278;"	d
SENDRATE	Stevens/mcast/send.c	4;"	d	file:
SEQ	Stevens/route/getrt.c	6;"	d	file:
SERV	Stevens/nonblock/web.h	4;"	d
SERV	Stevens/threads/web01.c	6;"	d	file:
SERV	Stevens/threads/web02.c	7;"	d	file:
SERV	Stevens/threads/web03.c	5;"	d	file:
SERV_HOST_ADDR	Stevens/streams/stream_dg/client.c	10;"	d	file:
SERV_MAX_SCTP_STRM	Stevens/sctp/unp.h	180;"	d
SERV_MORE_STRMS_SCTP	Stevens/sctp/unp.h	181;"	d
SERV_PORT	Stevens/key/unp.h	182;"	d
SERV_PORT	Stevens/lib/unp.h	200;"	d
SERV_PORT	Stevens/sctp/unp.h	175;"	d
SERV_PORT_STR	Stevens/key/unp.h	183;"	d
SERV_PORT_STR	Stevens/lib/unp.h	201;"	d
SERV_PORT_STR	Stevens/sctp/unp.h	176;"	d
SERV_TCP_PORT	Stevens/streams/stream_dg/client.c	11;"	d	file:
SERV_TCP_PORT	Stevens/streams/stream_dg/server.c	11;"	d	file:
SET	Stevens/ping/bsdping.c	95;"	d	file:
SHUT_RD	Stevens/key/unp.h	83;"	d
SHUT_RD	Stevens/lib/unp.h	102;"	d
SHUT_RD	Stevens/sctp/unp.h	76;"	d
SHUT_RDWR	Stevens/key/unp.h	85;"	d
SHUT_RDWR	Stevens/lib/unp.h	104;"	d
SHUT_RDWR	Stevens/sctp/unp.h	78;"	d
SHUT_WR	Stevens/key/unp.h	84;"	d
SHUT_WR	Stevens/lib/unp.h	103;"	d
SHUT_WR	Stevens/sctp/unp.h	77;"	d
SIG_ERR	Stevens/sock/ourhdr.h	36;"	d
STDC_HEADERS	Stevens/config.h	281;"	d
STDC_HEADERS	Stevens/sparc64-unknown-freebsd5.1/config.h	260;"	d
SUN_LEN	Stevens/key/unp.h	147;"	d
SUN_LEN	Stevens/lib/unp.h	166;"	d
SUN_LEN	Stevens/sctp/unp.h	140;"	d
SYN_ACK_HS3	assignment2/utils.h	9;"	d
SYN_HS1	assignment2/utils.h	7;"	d
Sctp_bindx	Stevens/sctp/sctp_wrapper.c	/^Sctp_bindx(int sock_fd,struct sockaddr_storage *at,int num,int op)$/;"	f
Sctp_recvmsg	Stevens/sctp/sctp_wrapper.c	/^Sctp_recvmsg(int s, void *msg, size_t len,$/;"	f
Sctp_sendmsg	Stevens/sctp/sctp_wrapper.c	/^Sctp_sendmsg (int s, void *data, size_t len, struct sockaddr *to,$/;"	f
Select	Stevens/lib/wrapsock.c	/^Select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,$/;"	f
Send	Stevens/lib/wrapsock.c	/^Send(int fd, const void *ptr, size_t nbytes, int flags)$/;"	f
SenderQueue	assignment2/utils.h	/^typedef struct SenderQueue	{$/;"	s
SenderWinElem	assignment2/utils.h	/^typedef struct SenderWinElem  {$/;"	s
Sendmsg	Stevens/lib/wrapsock.c	/^Sendmsg(int fd, const struct msghdr *msg, int flags)$/;"	f
Sendto	Stevens/lib/wrapsock.c	/^Sendto(int fd, const void *ptr, size_t nbytes, int flags,$/;"	f
Setsockopt	Stevens/lib/wrapsock.c	/^Setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
Shutdown	Stevens/lib/wrapsock.c	/^Shutdown(int fd, int how)$/;"	f
Sigaddset	Stevens/lib/wrapunix.c	/^Sigaddset(sigset_t *set, int signo)$/;"	f
Sigdelset	Stevens/lib/wrapunix.c	/^Sigdelset(sigset_t *set, int signo)$/;"	f
Sigemptyset	Stevens/lib/wrapunix.c	/^Sigemptyset(sigset_t *set)$/;"	f
Sigfillset	Stevens/lib/wrapunix.c	/^Sigfillset(sigset_t *set)$/;"	f
Sigfunc	Stevens/key/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	Stevens/lib/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	Stevens/sctp/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	Stevens/sock/ourhdr.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigismember	Stevens/lib/wrapunix.c	/^Sigismember(const sigset_t *set, int signo)$/;"	f
Signal	Stevens/lib/signal.c	/^Signal(int signo, Sigfunc *func)	\/* for our signal() function *\/$/;"	f
Signal_intr	Stevens/lib/signal_intr.c	/^Signal_intr(int signo, Sigfunc *func)$/;"	f
Sigpending	Stevens/lib/wrapunix.c	/^Sigpending(sigset_t *set)$/;"	f
Sigprocmask	Stevens/lib/wrapunix.c	/^Sigprocmask(int how, const sigset_t *set, sigset_t *oset)$/;"	f
Sock_bind_wild	Stevens/lib/sock_bind_wild.c	/^Sock_bind_wild(int sockfd, int family)$/;"	f
Sock_masktop	Stevens/libroute/unproute.h	20;"	d
Sock_masktop	Stevens/route/unproute.h	20;"	d
Sock_ntop	Stevens/lib/sock_ntop.c	/^Sock_ntop(const struct sockaddr *sa, socklen_t salen)$/;"	f
Sock_ntop_host	Stevens/lib/sock_ntop_host.c	/^Sock_ntop_host(const struct sockaddr *sa, socklen_t salen)$/;"	f
Sockatmark	Stevens/lib/wrapsock.c	/^Sockatmark(int fd)$/;"	f
Socket	Stevens/lib/wrapsock.c	/^Socket(int family, int type, int protocol)$/;"	f
Socketpair	Stevens/lib/wrapsock.c	/^Socketpair(int family, int type, int protocol, int *fd)$/;"	f
Sockfd_to_family	Stevens/lib/sockfd_to_family.c	/^Sockfd_to_family(int sockfd)$/;"	f
Strdup	Stevens/lib/wrapunix.c	/^Strdup(const char *str)$/;"	f
Sysconf	Stevens/lib/wrapunix.c	/^Sysconf(int name)$/;"	f
Sysctl	Stevens/lib/wrapunix.c	/^Sysctl(int *name, u_int namelen, void *oldp, size_t *oldlenp,$/;"	f
TELL_CHILD	Stevens/sock/tellwait.c	/^TELL_CHILD(pid_t pid)$/;"	f
TELL_PARENT	Stevens/sock/tellwait.c	/^TELL_PARENT(pid_t pid)$/;"	f
TELL_WAIT	Stevens/sock/tellwait.c	/^TELL_WAIT()$/;"	f
TEST1_OBJS	Stevens/test/Makefile	/^TEST1_OBJS = test1.o funcs.o$/;"	m
TIME_WITH_SYS_TIME	Stevens/config.h	284;"	d
TIME_WITH_SYS_TIME	Stevens/sparc64-unknown-freebsd5.1/config.h	263;"	d
TST	Stevens/ping/bsdping.c	97;"	d	file:
TTL_OUT	Stevens/udpcksum/udpcksum.h	13;"	d
T_INET_IP	Stevens/debug/unpxti.h	36;"	d
T_INET_IP	Stevens/streams/unpxti.h	36;"	d
T_INET_TCP	Stevens/debug/unpxti.h	28;"	d
T_INET_TCP	Stevens/streams/unpxti.h	28;"	d
T_INET_UDP	Stevens/debug/unpxti.h	33;"	d
T_INET_UDP	Stevens/streams/unpxti.h	33;"	d
T_IP_BROADCAST	Stevens/debug/unpxti.h	67;"	d
T_IP_BROADCAST	Stevens/streams/unpxti.h	67;"	d
T_IP_DONTROUTE	Stevens/debug/unpxti.h	63;"	d
T_IP_DONTROUTE	Stevens/streams/unpxti.h	63;"	d
T_IP_OPTIONS	Stevens/debug/unpxti.h	51;"	d
T_IP_OPTIONS	Stevens/streams/unpxti.h	51;"	d
T_IP_REUSEADDR	Stevens/debug/unpxti.h	60;"	d
T_IP_REUSEADDR	Stevens/streams/unpxti.h	60;"	d
T_IP_TOS	Stevens/debug/unpxti.h	54;"	d
T_IP_TOS	Stevens/streams/unpxti.h	54;"	d
T_IP_TTL	Stevens/debug/unpxti.h	57;"	d
T_IP_TTL	Stevens/streams/unpxti.h	57;"	d
T_TCP_KEEPALIVE	Stevens/debug/unpxti.h	45;"	d
T_TCP_KEEPALIVE	Stevens/streams/unpxti.h	45;"	d
T_TCP_MAXSEG	Stevens/debug/unpxti.h	42;"	d
T_TCP_MAXSEG	Stevens/streams/unpxti.h	42;"	d
T_TCP_NODELAY	Stevens/debug/unpxti.h	39;"	d
T_TCP_NODELAY	Stevens/streams/unpxti.h	39;"	d
T_UDP_CHECKSUM	Stevens/debug/unpxti.h	48;"	d
T_UDP_CHECKSUM	Stevens/streams/unpxti.h	48;"	d
TcpSockByAddr	Stevens/test/funcs.c	/^TcpSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f
Tcp_connect	Stevens/lib/tcp_connect.c	/^Tcp_connect(const char *host, const char *serv)$/;"	f
Tcp_listen	Stevens/lib/tcp_listen.c	/^Tcp_listen(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
Thread	Stevens/server/pthread07.h	/^} Thread;$/;"	t	typeref:struct:__anon4
Thread	Stevens/server/pthread08.h	/^} Thread;$/;"	t	typeref:struct:__anon5
Thread	Stevens/server/pthread09.h	/^} Thread;$/;"	t	typeref:struct:__anon6
UIO_MAXIOV	Stevens/sock/write.c	14;"	d	file:
UNIXDG_PATH	Stevens/key/unp.h	185;"	d
UNIXDG_PATH	Stevens/lib/unp.h	203;"	d
UNIXDG_PATH	Stevens/sctp/unp.h	185;"	d
UNIXDOMAIN	Stevens/config.h	287;"	d
UNIXDOMAIN	Stevens/sparc64-unknown-freebsd5.1/config.h	266;"	d
UNIXSTR_PATH	Stevens/key/unp.h	184;"	d
UNIXSTR_PATH	Stevens/lib/unp.h	202;"	d
UNIXSTR_PATH	Stevens/sctp/unp.h	184;"	d
UNIXdomain	Stevens/config.h	290;"	d
UNIXdomain	Stevens/sparc64-unknown-freebsd5.1/config.h	269;"	d
UdpConnSockByAddr	Stevens/test/funcs.c	/^UdpConnSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f
UdpSockByAddr	Stevens/test/funcs.c	/^UdpSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f
Udp_client	Stevens/lib/udp_client.c	/^Udp_client(const char *host, const char *serv, SA **saptr, socklen_t *lenptr)$/;"	f
Udp_client	Stevens/test/test2.c	/^Udp_client(const char *host, const char *serv, void **saptr, socklen_t *lenptr)$/;"	f
Udp_connect	Stevens/lib/udp_connect.c	/^Udp_connect(const char *host, const char *serv)$/;"	f
Udp_server	Stevens/lib/udp_server.c	/^Udp_server(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
Udp_server_reuseaddr	Stevens/names/udp_server_reuseaddr.c	/^Udp_server_reuseaddr(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
Unlink	Stevens/lib/wrapunix.c	/^Unlink(const char *pathname)$/;"	f
VERSION_MASK	Stevens/ssntp/ntp.h	27;"	d
WAIT_CHILD	Stevens/sock/tellwait.c	/^WAIT_CHILD(void)$/;"	f
WAIT_PARENT	Stevens/sock/tellwait.c	/^WAIT_PARENT(void)$/;"	f
WIN_UPDATE	assignment2/utils.h	10;"	d
Wait	Stevens/lib/wrapunix.c	/^Wait(int *iptr)$/;"	f
Waitpid	Stevens/lib/wrapunix.c	/^Waitpid(pid_t pid, int *iptr, int options)$/;"	f
Writable_timeo	Stevens/lib/writable_timeo.c	/^Writable_timeo(int fd, int sec)$/;"	f
Write	Stevens/lib/wrapunix.c	/^Write(int fd, void *ptr, size_t nbytes)$/;"	f
Write_fd	Stevens/lib/write_fd.c	/^Write_fd(int fd, void *ptr, size_t nbytes, int sendfd)$/;"	f
Writen	Stevens/lib/writen.c	/^Writen(int fd, void *ptr, size_t nbytes)$/;"	f
XTI_TCP	Stevens/debug/unpxti.h	73;"	d
XTI_TCP	Stevens/debug/unpxti.h	77;"	d
XTI_TCP	Stevens/debug/unpxti.h	81;"	d
XTI_TCP	Stevens/streams/unpxti.h	73;"	d
XTI_TCP	Stevens/streams/unpxti.h	77;"	d
XTI_TCP	Stevens/streams/unpxti.h	81;"	d
XTI_UDP	Stevens/debug/unpxti.h	74;"	d
XTI_UDP	Stevens/debug/unpxti.h	78;"	d
XTI_UDP	Stevens/debug/unpxti.h	82;"	d
XTI_UDP	Stevens/streams/unpxti.h	74;"	d
XTI_UDP	Stevens/streams/unpxti.h	78;"	d
XTI_UDP	Stevens/streams/unpxti.h	82;"	d
_SOCKADDR_LEN	Stevens/libfree/getaddrinfo.c	22;"	d	file:
__SS_ALIGNSIZE	Stevens/lib/unp.h	219;"	d
__SS_MAXSIZE	Stevens/lib/unp.h	218;"	d
__SS_PAD1SIZE	Stevens/lib/unp.h	221;"	d
__SS_PAD1SIZE	Stevens/lib/unp.h	223;"	d
__SS_PAD2SIZE	Stevens/lib/unp.h	225;"	d
__addrinfo_h	Stevens/lib/addrinfo.h	2;"	d
__addrinfo_h	Stevens/libfree/addrinfo.h	2;"	d
__addrinfo_h	Stevens/libgai/addrinfo.h	2;"	d
__ourhdr_h	Stevens/sock/ourhdr.h	4;"	d
__ss_align	Stevens/lib/unp.h	/^	int64_t		__ss_align;$/;"	m	struct:sockaddr_storage
__ss_pad1	Stevens/lib/unp.h	/^	char		__ss_pad1[__SS_PAD1SIZE];$/;"	m	struct:sockaddr_storage
__ss_pad2	Stevens/lib/unp.h	/^	char		__ss_pad2[__SS_PAD2SIZE];$/;"	m	struct:sockaddr_storage
__unp_h	Stevens/key/unp.h	5;"	d
__unp_h	Stevens/lib/unp.h	5;"	d
__unp_h	Stevens/sctp/unp.h	5;"	d
__unp_ifi_h	Stevens/lib/unpifi.h	5;"	d
__unp_ifi_plus_h	Asgn2_code/unpifiplus.h	5;"	d
__unp_pthread_h	Stevens/lib/unpthread.h	5;"	d
__unp_pthread_h	Stevens/server/unpthread.h	5;"	d
__unp_pthread_h	Stevens/threads/unpthread.h	5;"	d
__unp_rtt_h	Stevens/lib/unprtt.h	2;"	d
__unp_rtt_h	Stevens/rtt/unprtt.h	2;"	d
__unp_xti_h	Stevens/debug/unpxti.h	3;"	d
__unp_xti_h	Stevens/streams/unpxti.h	3;"	d
__unpicmp_h	Stevens/icmpd/unpicmpd.h	2;"	d
__utils_h	assignment2/utils.h	2;"	d
address_print	Stevens/key/printsadbmsg.c	/^address_print(struct sadb_ext *ext)$/;"	f
addrinfo	Stevens/lib/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo	Stevens/libfree/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo	Stevens/libgai/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo_local	Stevens/libfree/getaddrinfo.c	/^addrinfo_local(const char *path, struct addrinfo *hints,$/;"	f	file:
addrlen	Stevens/server/pthread07.h	/^socklen_t		addrlen;$/;"	v
addrlen	Stevens/server/pthread09.h	/^socklen_t		addrlen;$/;"	v
adv_window	assignment2/utils.h	/^        int adv_window;                                      \/* Advertising Window				       *\/$/;"	m	struct:header
adwinsize	assignment2/utils.h	/^	int		adwinsize;				\/*  Advertising Window Size	    *\/$/;"	m	struct:ReceiverQueue
adwinstart	assignment2/utils.h	/^	int		adwinstart;				\/*  Advertising Window Start	    *\/$/;"	m	struct:ReceiverQueue
ahalg	Stevens/key/name.c	/^static struct idlist ahalg[] = {$/;"	v	typeref:struct:idlist	file:
ai_addr	Stevens/lib/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addr	Stevens/libfree/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addr	Stevens/libgai/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	Stevens/lib/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo
ai_addrlen	Stevens/libfree/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo
ai_addrlen	Stevens/libgai/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo
ai_canonname	Stevens/lib/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo
ai_canonname	Stevens/libfree/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo
ai_canonname	Stevens/libgai/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo
ai_family	Stevens/lib/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo
ai_family	Stevens/libfree/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo
ai_family	Stevens/libgai/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo
ai_flags	Stevens/lib/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo
ai_flags	Stevens/libfree/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo
ai_flags	Stevens/libgai/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo
ai_next	Stevens/lib/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_next	Stevens/libfree/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_next	Stevens/libgai/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	Stevens/lib/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo
ai_protocol	Stevens/libfree/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo
ai_protocol	Stevens/libgai/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo
ai_socktype	Stevens/lib/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo
ai_socktype	Stevens/libfree/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo
ai_socktype	Stevens/libgai/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo
allset	Stevens/icmpd/icmpd.h	/^fd_set			rset, allset;$/;"	v
arg1	Stevens/tcpcliserv/sum.h	/^  long	arg1;$/;"	m	struct:args
arg2	Stevens/tcpcliserv/sum.h	/^  long	arg2;$/;"	m	struct:args
args	Stevens/tcpcliserv/sum.h	/^struct args {$/;"	s
assignCliIPnonLocal	assignment2/client.c	/^void assignCliIPnonLocal(struct clientStruct **cliInfo)$/;"	f
b_buf	Stevens/threads/example03.c	/^  int		b_buf[BUFFSIZE];	\/* the buffer which contains integer items *\/$/;"	m	struct:buf_t	file:
b_cond_consumer	Stevens/threads/example03.c	/^  pthread_cond_t	b_cond_consumer;	\/* consumer waiting to get *\/$/;"	m	struct:buf_t	file:
b_cond_producer	Stevens/threads/example03.c	/^  pthread_cond_t	b_cond_producer;	\/* producer waiting to put *\/$/;"	m	struct:buf_t	file:
b_mutex	Stevens/threads/example03.c	/^  pthread_mutex_t	b_mutex;$/;"	m	struct:buf_t	file:
b_nextget	Stevens/threads/example03.c	/^  int		b_nextget;$/;"	m	struct:buf_t	file:
b_nextput	Stevens/threads/example03.c	/^  int		b_nextput;$/;"	m	struct:buf_t	file:
b_nitems	Stevens/threads/example03.c	/^  int		b_nitems;			\/* #items currently in buffer *\/$/;"	m	struct:buf_t	file:
bindport	Stevens/sock/main.c	/^int		bindport;			\/* 0 or TCP or UDP port number to bind *\/$/;"	v
broadcast	Stevens/sock/main.c	/^int		broadcast;			\/* SO_BROADCAST *\/$/;"	v
buf_t	Stevens/threads/example03.c	/^struct buf_t {$/;"	s	file:
buf_t	Stevens/threads/example03.c	/^} buf_t;$/;"	v	typeref:struct:buf_t
buff	Stevens/test/test1.c	/^char	buff[8192];$/;"	v
buff	Stevens/test/tshutdown.c	/^char	buff[BUFF];$/;"	v
buffers	Stevens/sock/buffers.c	/^buffers(int sockfd)$/;"	f
bzero	Stevens/key/unp.h	111;"	d
bzero	Stevens/lib/unp.h	130;"	d
bzero	Stevens/sctp/unp.h	104;"	d
canjump	Stevens/udpcksum/udpcksum.c	/^static int			canjump;$/;"	v	file:
cbreak	Stevens/sock/main.c	/^int		cbreak;				\/* set terminal to cbreak mode *\/$/;"	v
cfd	Stevens/debug/backlog.c	13;"	d	file:
cfd	Stevens/debug/qlen.c	13;"	d	file:
checkLocal	assignment2/client.c	/^int checkLocal (struct clientStruct **cliInfo)$/;"	f
checkLocal	assignment2/server.c	/^int checkLocal (struct sockaddr_in serverIP, struct sockaddr_in serverIPnmsk, struct sockaddr_in serverIPsubnet, struct sockaddr_in clientIP)$/;"	f
check_notification	Stevens/sctp/sctp_check_notify.c	/^check_notification(int sock_fd,char *recvline,int rd_len)$/;"	f
childRequestHandler	assignment2/server.c	/^int childRequestHandler(int sock, struct InterfaceInfo *head, struct sockaddr_in client_addr, char filename[496])$/;"	f
child_count	Stevens/server/child.h	/^  long		child_count;	\/* # connections handled *\/$/;"	m	struct:__anon3
child_main	Stevens/server/child02.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child02l.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child02m.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child03.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child03m.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child04.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_main	Stevens/server/child05.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child02.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child02l.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child02m.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child03.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child03m.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child04.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_make	Stevens/server/child05.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f
child_pid	Stevens/server/child.h	/^  pid_t		child_pid;		\/* process ID *\/$/;"	m	struct:__anon3
child_pid	assignment2/utils.h	/^	int				child_pid;		\/* child pid			 *\/$/;"	m	struct:existing_connections
child_pipefd	Stevens/server/child.h	/^  int		child_pipefd;	\/* parent's stream pipe to\/from child *\/$/;"	m	struct:__anon3
child_status	Stevens/server/child.h	/^  int		child_status;	\/* 0 = ready *\/$/;"	m	struct:__anon3
chunkwrite	Stevens/sock/main.c	/^int		chunkwrite;			\/* write in small chunks; not all-at-once *\/$/;"	v
cleanup	Stevens/udpcksum/cleanup.c	/^cleanup(int signo)$/;"	f
cli_addr	assignment2/utils.h	/^	struct sockaddr_in 	cli_addr;		\/* IP address of client		 *\/$/;"	m	struct:clientStruct	typeref:struct:clientStruct::sockaddr_in
cli_portNum	assignment2/utils.h	/^	int                     cli_portNum;            \/* Client port number            *\/$/;"	m	struct:clientStruct
cliaddr	Stevens/icmpd/icmpd.h	/^struct sockaddr_un	cliaddr;$/;"	v	typeref:struct:sockaddr_un
cliaddr	Stevens/sock/main.c	/^struct sockaddr_in	cliaddr, servaddr;$/;"	v	typeref:struct:sockaddr_in
cliaddr	Stevens/test/test1.c	/^struct sockaddr_in	servaddr, cliaddr;$/;"	v	typeref:struct:
client	Stevens/icmpd/icmpd.h	/^struct client {$/;"	s
client	Stevens/icmpd/icmpd.h	/^} client[FD_SETSIZE];$/;"	v	typeref:struct:client
client	Stevens/sock/main.c	/^int		client = 1;			\/* acting as client is the default *\/$/;"	v
clientStruct	assignment2/utils.h	/^typedef struct clientStruct {$/;"	s
clientStruct	assignment2/utils.h	/^} clientStruct;$/;"	t	typeref:struct:clientStruct
client_addr	assignment2/utils.h	/^	struct sockaddr_in		client_addr;		\/* IP address of client		 *\/$/;"	m	struct:existing_connections	typeref:struct:existing_connections::sockaddr_in
client_portNum	assignment2/utils.h	/^	int				client_portNum;		\/* Client port number		 *\/$/;"	m	struct:existing_connections
clifd	Stevens/server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
clifd_cond	Stevens/server/pthread08.h	/^pthread_cond_t		clifd_cond;$/;"	v
clifd_cond	Stevens/server/serv08.c	/^pthread_cond_t		clifd_cond = PTHREAD_COND_INITIALIZER;$/;"	v
clifd_mutex	Stevens/server/pthread08.h	/^pthread_mutex_t		clifd_mutex;$/;"	v
clifd_mutex	Stevens/server/serv08.c	/^pthread_mutex_t		clifd_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
clilen	Stevens/sigio/dgecho01.c	/^static socklen_t clilen;\/* max length of sockaddr{} *\/$/;"	v	file:
cliopen	Stevens/sock/cliopen.c	/^cliopen(char *host, char *port)$/;"	f
cntread	Stevens/sigio/dgecho01.c	/^static long	cntread[QSIZE+1];	\/* diagnostic counter *\/$/;"	v	file:
connect_alarm	Stevens/lib/connect_timeo.c	/^connect_alarm(int signo)$/;"	f	file:
connect_nonb	Stevens/lib/connect_nonb.c	/^connect_nonb(int sockfd, const SA *saptr, socklen_t salen, int nsec)$/;"	f
connect_timeo	Stevens/lib/connect_timeo.c	/^connect_timeo(int sockfd, const SA *saptr, socklen_t salen, int nsec)$/;"	f
connectudp	Stevens/sock/main.c	/^int		connectudp = 1;		\/* connect UDP client *\/$/;"	v
connfd	Stevens/debug/test05.c	/^int		listenfd, connfd;$/;"	v
connfd	Stevens/icmpd/icmpd.h	/^  int	connfd;			\/* Unix domain stream socket to client *\/$/;"	m	struct:client
connfd	Stevens/oob/tcprecv01.c	/^int		listenfd, connfd;$/;"	v
connfd	Stevens/oob/tcprecv05.c	/^int		listenfd, connfd;$/;"	v
consume	Stevens/threads/example03.c	/^consume(struct buf_t *bptr)$/;"	f
consume_loop	Stevens/threads/example03.c	/^consume_loop(void *vptr)$/;"	f
copyright	Stevens/ping/bsdping.c	/^static char copyright[] =$/;"	v	file:
copyto	Stevens/threads/strclithread.c	/^copyto(void *arg)$/;"	f
copyto	Stevens/threads/strclithread2.c	/^copyto(void *arg)$/;"	f
count	Stevens/udpcliserv/dgecholoop1.c	/^static int	count;$/;"	v	file:
count	Stevens/udpcliserv/dgecholoop2.c	/^static int	count;$/;"	v	file:
counter	Stevens/threads/example01.c	/^int				counter;		\/* incremented by threads *\/$/;"	v
counter	Stevens/threads/example02.c	/^int				counter;		\/* incremented by threads *\/$/;"	v
counter_mutex	Stevens/threads/example02.c	/^pthread_mutex_t	counter_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
cptr	Stevens/server/child.h	/^Child	*cptr;		\/* array of Child structures; calloc'ed *\/$/;"	v
cptr	Stevens/server/serv02m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	v
cptr	Stevens/server/serv03m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	v
createAckPacket	assignment2/utils.c	/^struct msghdr createAckPacket(hdr ackheader)$/;"	f
createConn	assignment2/server.c	/^int createConn(int isLocal, struct sockaddr_in client_addr, struct sockaddr_in *clientaddr, struct sockaddr_in *servaddr, struct sockaddr_in *addr, struct InterfaceInfo *head)$/;"	f
createDataPacket	assignment2/utils.c	/^struct msghdr* createDataPacket(hdr *dataheader, char *data, int datalen)$/;"	f
createHeader	assignment2/utils.c	/^hdr* createHeader(int msgtype, int seqnum, int advwin, int ts)$/;"	f
createInitialConn	assignment2/client.c	/^int createInitialConn(struct clientStruct **cliInfo, int isLocal)$/;"	f
crlf	Stevens/sock/main.c	/^int		crlf;				\/* convert newline to CR\/LF & vice versa *\/$/;"	v
crlf_add	Stevens/sock/crlf.c	/^crlf_add(char *dst, int dstsize, const char *src, int lenin)$/;"	f
crlf_strip	Stevens/sock/crlf.c	/^crlf_strip(char *dst, int dstsize, const char *src, int lenin)$/;"	f
ctl6_flow	Stevens/ping/old/ip6.h	/^	    u_int32_t ctl6_flow;	\/* 24 bits of flow-ID *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl
ctl6_hlim	Stevens/ping/old/ip6.h	/^	    u_int8_t  ctl6_hlim;        \/* hop limit *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl
ctl6_nxt	Stevens/ping/old/ip6.h	/^	    u_int8_t  ctl6_nxt;         \/* next header *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl
ctl6_plen	Stevens/ping/old/ip6.h	/^	    u_int16_t ctl6_plen;        \/* payload length *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl
daemon_inetd	Stevens/lib/daemon_inetd.c	/^daemon_inetd(const char *pname, int facility)$/;"	f
daemon_init	Stevens/lib/daemon_init.c	/^daemon_init(const char *pname, int facility)$/;"	f
daemon_proc	Stevens/lib/error.c	/^int		daemon_proc;		\/* set nonzero by daemon_init() *\/$/;"	v
datalen	Stevens/ping/bsdping.c	/^int datalen = DEFDATALEN;$/;"	v
datalen	Stevens/ping/main.c	/^int	datalen = 56;		\/* data that goes with ICMP echo request *\/$/;"	v
datalen	Stevens/ping/ping.h	/^int		 datalen;			\/* # bytes of data following ICMP header *\/$/;"	v
datalen	Stevens/traceroute/main.c	/^int		datalen = sizeof(struct rec);	\/* defaults *\/$/;"	v
datalen	Stevens/traceroute/trace.h	/^int		 datalen;			\/* # bytes of data following ICMP header *\/$/;"	v
datalink	Stevens/udpcksum/main.c	/^int		datalink;		\/* from pcap_datalink(), in <net\/bpf.h> *\/$/;"	v
debug	Stevens/sock/main.c	/^int		debug;				\/* SO_DEBUG *\/$/;"	v
dest	Stevens/udpcksum/main.c	/^struct sockaddr	*dest, *local;$/;"	v	typeref:struct:sockaddr
destlen	Stevens/udpcksum/main.c	/^socklen_t		destlen, locallen;$/;"	v
device	Stevens/udpcksum/main.c	/^char   *device;			\/* pcap device *\/$/;"	v
dg	Stevens/sigio/dgecho01.c	/^static DG	dg[QSIZE];			\/* queue of datagrams to process *\/$/;"	v	file:
dg_cli	Stevens/advio/dgclitimeo.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/advio/dgclitimeo1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/advio/dgclitimeo2.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/advio/dgclitimeo3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast2.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast4.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast5.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/bcast/dgclibcast6.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/icmpd/dgcli01.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/lib/dg_cli.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/mcast/dgclibcast1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/mcast/dgclimcast5.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/mcast/dgclimcast6.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/rtt/dg_cli.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/sigio/dgcli01.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgcliaddr.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgclibig.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgcliconnect.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgcliinetaddr.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgcliloop1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_cli	Stevens/udpcliserv/dgcliloop3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f
dg_data	Stevens/sigio/dgecho01.c	/^  void		*dg_data;		\/* ptr to actual datagram *\/$/;"	m	struct:__anon8	file:
dg_echo	Stevens/advio/dgechoaddr.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/advio/old/dgechoaddr.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/ipopts/dgechoprintroute.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/lib/dg_echo.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/rtt/dg_echo.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/sigio/dgecho01.c	/^dg_echo(int sockfd_arg, SA *pcliaddr, socklen_t clilen_arg)$/;"	f
dg_echo	Stevens/udpcliserv/dgecholoop1.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_echo	Stevens/udpcliserv/dgecholoop2.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f
dg_len	Stevens/sigio/dgecho01.c	/^  size_t	dg_len;			\/* length of datagram *\/$/;"	m	struct:__anon8	file:
dg_lossProb	assignment2/utils.h	/^	float 			dg_lossProb; 		\/* Datagram loss probability     *\/$/;"	m	struct:clientStruct
dg_sa	Stevens/sigio/dgecho01.c	/^  struct sockaddr  *dg_sa;	\/* ptr to sockaddr{} w\/client's address *\/$/;"	m	struct:__anon8	typeref:struct:__anon8::sockaddr	file:
dg_salen	Stevens/sigio/dgecho01.c	/^  socklen_t	dg_salen;		\/* length of sockaddr{} *\/$/;"	m	struct:__anon8	file:
dg_send_recv	Stevens/rtt/dg_send_recv.c	/^dg_send_recv(int fd, const void *outbuff, size_t outbytes,$/;"	f
dispersion	Stevens/ssntp/ntp.h	/^  struct s_fixedpt	dispersion;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt
distance	Stevens/ssntp/ntp.h	/^  struct s_fixedpt	distance;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt
do_child	Stevens/debug/backlog.c	/^do_child(void)$/;"	f
do_child	Stevens/debug/qlen.c	/^do_child(void)$/;"	f
do_errtest	Stevens/libgai/testga.c	/^do_errtest(void)$/;"	f	file:
do_funccall	Stevens/libgai/testga.c	/^do_funccall(const char *host, const char *serv,$/;"	f	file:
do_get_read	Stevens/threads/web01.c	/^do_get_read(void *vptr)$/;"	f
do_get_read	Stevens/threads/web02.c	/^do_get_read(void *vptr)$/;"	f
do_get_read	Stevens/threads/web03.c	/^do_get_read(void *vptr)$/;"	f
do_ipv46	Stevens/libfree/getnameinfo.c	/^do_ipv46(char *host, size_t hostlen, char *serv, size_t servlen,$/;"	f	file:
do_onetest	Stevens/libgai/testga.c	/^do_onetest(char *host, char *serv, struct addrinfo *hints, int iteration)$/;"	f	file:
do_parent	Stevens/debug/backlog.c	/^do_parent(void)$/;"	f
do_parent	Stevens/debug/qlen.c	/^do_parent(void)$/;"	f
dofork	Stevens/sock/main.c	/^int		dofork;				\/* concurrent server, do a fork() *\/$/;"	v
doit	Stevens/server/serv06.c	/^doit(void *arg)$/;"	f
doit	Stevens/sockopt/prdefaults.c	/^doit(int fd, const char *name)$/;"	f	file:
doit	Stevens/threads/example01.c	/^doit(void *vptr)$/;"	f
doit	Stevens/threads/example02.c	/^doit(void *vptr)$/;"	f
doit	Stevens/threads/tcpserv01.c	/^doit(void *arg)$/;"	f	file:
doit	Stevens/threads/tcpserv02.c	/^doit(void *arg)$/;"	f	file:
done	Stevens/threads/strclithread2.c	/^static int	done;$/;"	v	file:
dontroute	Stevens/sock/main.c	/^int		dontroute;			\/* SO_DONTROUTE *\/$/;"	v
dowrite	Stevens/sock/write.c	/^dowrite(int fd, const void *vptr, size_t nbytes)$/;"	f
dport	Stevens/traceroute/main.c	/^u_short	dport = 32768 + 666;$/;"	v
dport	Stevens/traceroute/trace.h	/^u_short	 sport, dport;$/;"	v
echoSrv	assignment1/tcpechotimesrv.c	/^void * echoSrv(void *arg)$/;"	f
echo_driver	Stevens/streams/stream_dg/client.c	/^echo_driver(int fd, struct sockaddr_in *serv_addr)$/;"	f
echo_serv	Stevens/streams/stream_dg/server.c	/^echo_serv (int fd)$/;"	f
elem	assignment2/utils.h	/^	recvWinElem	*elem;					\/*  Receiver Buffer		    *\/$/;"	m	struct:ReceiverQueue
elem	assignment2/utils.h	/^	sendWinElem	*elem;					\/*  Sender Buffer		    *\/$/;"	m	struct:SenderQueue
err_doit	Stevens/lib/error.c	/^err_doit(int errnoflag, int level, const char *fmt, va_list ap)$/;"	f	file:
err_doit	Stevens/sock/error.c	/^err_doit(int errnoflag, const char *fmt, va_list ap)$/;"	f	file:
err_dump	Stevens/lib/error.c	/^err_dump(const char *fmt, ...)$/;"	f
err_dump	Stevens/sock/error.c	/^err_dump(const char *fmt, ...)$/;"	f
err_msg	Stevens/lib/error.c	/^err_msg(const char *fmt, ...)$/;"	f
err_msg	Stevens/sock/error.c	/^err_msg(const char *fmt, ...)$/;"	f
err_quit	Stevens/lib/error.c	/^err_quit(const char *fmt, ...)$/;"	f
err_quit	Stevens/sock/error.c	/^err_quit(const char *fmt, ...)$/;"	f
err_ret	Stevens/lib/error.c	/^err_ret(const char *fmt, ...)$/;"	f
err_ret	Stevens/sock/error.c	/^err_ret(const char *fmt, ...)$/;"	f
err_sys	Stevens/lib/error.c	/^err_sys(const char *fmt, ...)$/;"	f
err_sys	Stevens/sock/error.c	/^err_sys(const char *fmt, ...)$/;"	f
error	Stevens/libfree/getaddrinfo.c	158;"	d	file:
error	Stevens/libgai/getaddrinfo.c	20;"	d	file:
error	Stevens/libgai/old/savecopy.c	43;"	d	file:
error_handler	assignment1/echo_cli.c	/^void error_handler (char * errMsg)$/;"	f
error_handler	assignment1/time_cli.c	/^void error_handler (char * errMsg)$/;"	f
espalg	Stevens/key/name.c	/^static struct idlist espalg[] = {$/;"	v	typeref:struct:idlist	file:
etherprint	Stevens/ioctl/lsif02.c	/^etherprint(const u_char eaddr[6], char string[18])$/;"	f
existing_conn	assignment2/server.c	/^struct existing_connections *existing_conn;$/;"	v	typeref:struct:existing_connections
existing_connection	assignment2/server.c	/^int existing_connection(struct sockaddr_in *client_addr){$/;"	f
existing_connections	assignment2/utils.h	/^typedef struct existing_connections {$/;"	s
existing_connections	assignment2/utils.h	/^}existing_connections;$/;"	t	typeref:struct:existing_connections
exitChild_handler	assignment2/server.c	/^exitChild_handler (int signo)$/;"	f	file:
f_fd	Stevens/nonblock/web.h	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file
f_fd	Stevens/threads/web01.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:
f_fd	Stevens/threads/web02.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:
f_fd	Stevens/threads/web03.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:
f_flags	Stevens/nonblock/web.h	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file
f_flags	Stevens/threads/web01.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:
f_flags	Stevens/threads/web02.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:
f_flags	Stevens/threads/web03.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:
f_host	Stevens/nonblock/web.h	/^  char	*f_host;			\/* hostname or IPv4\/IPv6 address *\/$/;"	m	struct:file
f_host	Stevens/threads/web01.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:
f_host	Stevens/threads/web02.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:
f_host	Stevens/threads/web03.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:
f_name	Stevens/nonblock/web.h	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file
f_name	Stevens/threads/web01.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:
f_name	Stevens/threads/web02.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:
f_name	Stevens/threads/web03.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:
f_tid	Stevens/threads/web01.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:
f_tid	Stevens/threads/web02.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:
f_tid	Stevens/threads/web03.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:
family	Stevens/icmpd/icmpd.h	/^  int	family;			\/* AF_INET or AF_INET6 *\/$/;"	m	struct:client
family	Stevens/libgai/gai_hdr.h	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search
family	Stevens/libgai/old/savecopy.c	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search	file:
family_to_level	Stevens/lib/family_to_level.c	/^family_to_level(int family)$/;"	f
fd4	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
fd6	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
file	Stevens/nonblock/web.h	/^struct file {$/;"	s
file	Stevens/nonblock/web.h	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	Stevens/threads/web01.c	/^struct file {$/;"	s	file:
file	Stevens/threads/web01.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	Stevens/threads/web02.c	/^struct file {$/;"	s	file:
file	Stevens/threads/web02.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	Stevens/threads/web03.c	/^struct file {$/;"	s	file:
file	Stevens/threads/web03.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
fileName	assignment2/utils.h	/^        char 			fileName[100]; 		\/* Filename to be transferred	 *\/$/;"	m	struct:clientStruct
fill	Stevens/ping/bsdping.c	/^fill(bp, patp)$/;"	f
finit	Stevens/ping/ping.h	/^  void	 (*finit)(void);$/;"	m	struct:proto
foreignip	Stevens/sock/main.c	/^char	foreignip[32];		\/* foreign IP address, dotted-decimal string *\/$/;"	v
foreignport	Stevens/sock/main.c	/^int		foreignport;		\/* foreign port number *\/$/;"	v
fp	Stevens/threads/strclithread.c	/^static FILE	*fp;$/;"	v	file:
fp	Stevens/threads/strclithread2.c	/^static FILE	*fp;$/;"	v	file:
fproc	Stevens/ping/ping.h	/^  void	 (*fproc)(char *, ssize_t, struct msghdr *, struct timeval *);$/;"	m	struct:proto
fraction	Stevens/ssntp/ntp.h	/^  uint16_t	fraction;$/;"	m	struct:s_fixedpt
fraction	Stevens/ssntp/ntp.h	/^  uint32_t	fraction;$/;"	m	struct:l_fixedpt
free_ifi_info	Stevens/lib/get_ifi_info.c	/^free_ifi_info(struct ifi_info *ifihead)$/;"	f
free_ifi_info	Stevens/route/get_ifi_info.c	/^free_ifi_info(struct ifi_info *ifihead)$/;"	f
free_ifi_info_plus	Asgn2_code/get_ifi_info_plus.c	/^free_ifi_info_plus(struct ifi_info *ifihead)$/;"	f
freeaddrinfo	Stevens/libfree/getaddrinfo.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f
freeaddrinfo	Stevens/libgai/freeaddrinfo.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f
freeaddrinfo	Stevens/libgai/old/savecopy.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f
fsend	Stevens/ping/ping.h	/^  void	 (*fsend)(void);$/;"	m	struct:proto
ga_aistruct	Stevens/libgai/ga_aistruct.c	/^ga_aistruct(struct addrinfo ***paipnext, const struct addrinfo *hintsp,$/;"	f
ga_aistruct	Stevens/libgai/old/savecopy.c	/^ga_aistruct(struct addrinfo ***paipnext, const struct addrinfo *hintsp,$/;"	f	file:
ga_clone	Stevens/libgai/ga_clone.c	/^ga_clone(struct addrinfo *ai)$/;"	f
ga_clone	Stevens/libgai/old/savecopy.c	/^ga_clone(struct addrinfo *ai)$/;"	f	file:
ga_echeck	Stevens/libgai/ga_echeck.c	/^ga_echeck(const char *hostname, const char *servname,$/;"	f
ga_echeck	Stevens/libgai/old/savecopy.c	/^ga_echeck(const char *hostname, const char *servname,$/;"	f	file:
ga_nsearch	Stevens/libgai/ga_nsearch.c	/^ga_nsearch(const char *hostname, const struct addrinfo *hintsp,$/;"	f
ga_nsearch	Stevens/libgai/old/savecopy.c	/^ga_nsearch(const char *hostname, const struct addrinfo *hintsp,$/;"	f	file:
ga_port	Stevens/libgai/ga_port.c	/^ga_port(struct addrinfo *aihead, int port, int socktype)$/;"	f
ga_port	Stevens/libgai/old/savecopy.c	/^ga_port(struct addrinfo *aihead, int port, int socktype)$/;"	f	file:
ga_serv	Stevens/libgai/ga_serv.c	/^ga_serv(struct addrinfo *aihead, const struct addrinfo *hintsp,$/;"	f
ga_serv	Stevens/libgai/old/savecopy.c	/^ga_serv(struct addrinfo *aihead, const struct addrinfo *hintsp,$/;"	f	file:
ga_unix	Stevens/libgai/ga_unix.c	/^ga_unix(const char *path, struct addrinfo *hintsp, struct addrinfo **result)$/;"	f
ga_unix	Stevens/libgai/old/savecopy.c	/^ga_unix(const char *path, struct addrinfo *hintsp, struct addrinfo **result)$/;"	f	file:
ga_unixstruct	Stevens/libgai/old/ga_unixstruct.c	/^ga_unixstruct(const char *path, struct addrinfo *hintsp,$/;"	f
gai_strerror	Stevens/libgai/gai_strerror.c	/^gai_strerror(int err)$/;"	f
get	Stevens/threads/web02.c	/^char	get[] = "GET \/ HTTP\/1.0\\r\\n\\r\\n";	\/* for home page *\/$/;"	v
getSubnetCount	assignment2/client.c	/^int getSubnetCount(unsigned long netmsk)$/;"	f
get_auth_alg	Stevens/key/printsadbmsg.c	/^get_auth_alg(int alg)$/;"	f
get_encrypt_alg	Stevens/key/printsadbmsg.c	/^get_encrypt_alg(int alg)$/;"	f
get_ifi_info	Stevens/lib/get_ifi_info.c	/^get_ifi_info(int family, int doaliases)$/;"	f
get_ifi_info	Stevens/route/get_ifi_info.c	/^get_ifi_info(int family, int doaliases)$/;"	f
get_ifi_info_plus	Asgn2_code/get_ifi_info_plus.c	/^get_ifi_info_plus(int family, int doaliases)$/;"	f
get_interfaces_client	assignment2/utils.c	/^interfaceInfo* get_interfaces_client()$/;"	f
get_interfaces_server	assignment2/utils.c	/^interfaceInfo* get_interfaces_server(int portno)$/;"	f
get_rtaddrs	Stevens/libroute/get_rtaddrs.c	/^get_rtaddrs(int addrs, SA *sa, SA **rti_info)$/;"	f
get_sa_state	Stevens/key/printsadbmsg.c	/^get_sa_state(int state)$/;"	f
get_sadb_alg_type	Stevens/key/printsadbmsg.c	/^get_sadb_alg_type(int alg, int authenc)$/;"	f
get_sadb_msg_type	Stevens/key/printsadbmsg.c	/^get_sadb_msg_type(int type)$/;"	f
get_sadb_satype	Stevens/key/printsadbmsg.c	/^get_sadb_satype(int type)$/;"	f
getaddrinfo	Stevens/libfree/getaddrinfo.c	/^getaddrinfo(const char *host, const char *serv,$/;"	f
getaddrinfo	Stevens/libgai/getaddrinfo.c	/^getaddrinfo(const char *hostname, const char *servname,$/;"	f
getaddrinfo	Stevens/libgai/old/savecopy.c	/^getaddrinfo(const char *hostname, const char *servname,$/;"	f
getaddrinfo_clone	Stevens/libfree/getaddrinfo.c	/^getaddrinfo_clone(struct addrinfo *ai)$/;"	f	file:
getaddrinfo_host	Stevens/libfree/getaddrinfo.c	/^getaddrinfo_host(const char *host,$/;"	f	file:
getaddrinfo_port	Stevens/libfree/getaddrinfo.c	/^getaddrinfo_port(struct addrinfo *aihead, int port, int socktype)$/;"	f	file:
getaddrinfo_serv	Stevens/libfree/getaddrinfo.c	/^getaddrinfo_serv(struct addrinfo *aihead,$/;"	f	file:
gethostbyname2	Stevens/key/unp.h	118;"	d
gethostbyname2	Stevens/lib/unp.h	137;"	d
gethostbyname2	Stevens/sctp/unp.h	111;"	d
getnameinfo	Stevens/libfree/getnameinfo.c	/^getnameinfo(const struct sockaddr *sa, size_t salen,$/;"	f
getnameinfo	Stevens/libgai/getnameinfo.c	/^getnameinfo(const struct sockaddr *sa, socklen_t salen,$/;"	f
getsaalgbyname	Stevens/key/name.c	/^getsaalgbyname(int type, char *name)$/;"	f
getsatypebyname	Stevens/key/name.c	/^getsatypebyname(char *name)$/;"	f
gf_time	Stevens/lib/gf_time.c	/^gf_time(void)$/;"	f
gn_ipv46	Stevens/libgai/gn_ipv46.c	/^gn_ipv46(char *host, size_t hostlen, char *serv, size_t servlen,$/;"	f
gotalarm	Stevens/traceroute/sig_alrm.c	/^int gotalarm;$/;"	v
halfclose	Stevens/sock/main.c	/^int		halfclose;			\/* TCP half close option *\/$/;"	v
hdr	Stevens/rtt/dg_send_recv.c	/^static struct hdr {$/;"	s	file:
hdr	assignment2/utils.h	/^}hdr;$/;"	t	typeref:struct:header
header	assignment2/utils.h	/^	hdr	header;						\/*  Packet Header		    *\/$/;"	m	struct:Packet
header	assignment2/utils.h	/^        hdr     header;						\/* Structure to store header information    *\/$/;"	m	struct:message
header	assignment2/utils.h	/^typedef struct header   {$/;"	s
header_flags	Stevens/test/test1.c	/^header_flags()$/;"	f
heartbeat_action	Stevens/sctp/sctp_modify_hb.c	/^int heartbeat_action(int sock_fd, struct sockaddr *sa, socklen_t salen,$/;"	f
heartbeat_cli	Stevens/oob/heartbeatcli.c	/^heartbeat_cli(int servfd_arg, int nsec_arg, int maxnprobes_arg)$/;"	f
heartbeat_serv	Stevens/oob/heartbeatserv.c	/^heartbeat_serv(int servfd_arg, int nsec_arg, int maxnalarms_arg)$/;"	f
hints_default	Stevens/libfree/getaddrinfo.c	/^static struct addrinfo	hints_default;$/;"	v	typeref:struct:addrinfo	file:
hints_default	Stevens/libgai/old/savecopy.c	/^static struct addrinfo	hints_default;$/;"	v	typeref:struct:addrinfo	file:
home_page	Stevens/nonblock/home_page.c	/^home_page(const char *host, const char *fname)$/;"	f
home_page	Stevens/threads/web01.c	/^home_page(const char *host, const char *fname)$/;"	f
home_page	Stevens/threads/web02.c	/^home_page(const char *host, const char *fname)$/;"	f
home_page	Stevens/threads/web03.c	/^home_page(const char *host, const char *fname)$/;"	f
host	Stevens/libgai/gai_hdr.h	/^  const char	*host;	\/* hostname or address string *\/$/;"	m	struct:search
host	Stevens/libgai/old/savecopy.c	/^  const char	*host;	\/* hostname of address string *\/$/;"	m	struct:search	file:
host	Stevens/ping/ping.h	/^char	*host;$/;"	v
host	Stevens/sock/main.c	/^char	*host;		\/* hostname or dotted-decimal string *\/$/;"	v
host	Stevens/traceroute/trace.h	/^char	*host;$/;"	v
host_serv	Stevens/lib/host_serv.c	/^host_serv(const char *host, const char *serv, int family, int socktype)$/;"	f
hostname	Stevens/ping/bsdping.c	/^char *hostname;$/;"	v
hostname_to_ip	assignment1/tcpechotimecli.c	/^int hostname_to_ip(char *hostname , char* ip)$/;"	f
hstrerror	Stevens/lib/hstrerror.c	/^hstrerror(int err)$/;"	f
i_val	Stevens/sockopt/checkopts.c	/^  int				i_val;$/;"	m	union:val	file:
icmp6_cksum	Stevens/ping/old/icmp6.h	/^    u_int16_t	icmp6_cksum;		\/* Checksum field *\/$/;"	m	struct:icmp6hdr
icmp6_code	Stevens/ping/old/icmp6.h	/^    u_int8_t	icmp6_code;		\/* Code field *\/$/;"	m	struct:icmp6hdr
icmp6_data16	Stevens/ping/old/icmp6.h	13;"	d
icmp6_data32	Stevens/ping/old/icmp6.h	12;"	d
icmp6_data8	Stevens/ping/old/icmp6.h	14;"	d
icmp6_dataun	Stevens/ping/old/icmp6.h	/^    } icmp6_dataun;$/;"	m	struct:icmp6hdr	typeref:union:icmp6hdr::__anon1
icmp6_id	Stevens/ping/old/icmp6.h	17;"	d
icmp6_maxdelay	Stevens/ping/old/icmp6.h	19;"	d
icmp6_mtu	Stevens/ping/old/icmp6.h	16;"	d
icmp6_pptr	Stevens/ping/old/icmp6.h	15;"	d
icmp6_seq	Stevens/ping/old/icmp6.h	18;"	d
icmp6_type	Stevens/ping/old/icmp6.h	/^    u_int8_t	icmp6_type;		\/* Type field *\/$/;"	m	struct:icmp6hdr
icmp6hdr	Stevens/ping/old/icmp6.h	/^struct icmp6hdr {$/;"	s
icmpcode	Stevens/traceroute/trace.h	/^  const char	*(*icmpcode)(int);$/;"	m	struct:proto
icmpcode_v4	Stevens/traceroute/icmpcode_v4.c	/^icmpcode_v4(int code)$/;"	f
icmpcode_v6	Stevens/traceroute/icmpcode_v6.c	/^icmpcode_v6(int code)$/;"	f
icmpd_code	Stevens/icmpd/unpicmpd.h	/^  char				icmpd_code;	\/* actual ICMPv[46] code *\/$/;"	m	struct:icmpd_err
icmpd_dest	Stevens/icmpd/unpicmpd.h	/^  struct sockaddr_storage	icmpd_dest;	\/* sockaddr_storage handles any size *\/$/;"	m	struct:icmpd_err	typeref:struct:icmpd_err::sockaddr_storage
icmpd_err	Stevens/icmpd/unpicmpd.h	/^struct icmpd_err {$/;"	s
icmpd_errno	Stevens/icmpd/unpicmpd.h	/^  int				icmpd_errno;\/* EHOSTUNREACH, EMSGSIZE, ECONNREFUSED *\/$/;"	m	struct:icmpd_err
icmpd_len	Stevens/icmpd/unpicmpd.h	/^  socklen_t			icmpd_len;	\/* length of sockaddr{} that follows *\/$/;"	m	struct:icmpd_err
icmpd_type	Stevens/icmpd/unpicmpd.h	/^  char				icmpd_type;	\/* actual ICMPv[46] type *\/$/;"	m	struct:icmpd_err
icmpproto	Stevens/ping/ping.h	/^  int	   	    icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto
icmpproto	Stevens/traceroute/trace.h	/^  int			icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto
ident	Stevens/ping/bsdping.c	/^int ident;			\/* process id to identify our packets *\/$/;"	v
idlist	Stevens/key/name.c	/^struct idlist {$/;"	s	file:
idlistlookup	Stevens/key/name.c	/^idlistlookup(char *name, struct idlist *il)$/;"	f
if_freenameindex	Stevens/lib/if_nameindex.c	/^if_freenameindex(struct if_nameindex *ptr)$/;"	f
if_freenameindex	Stevens/libroute/if_nameindex.c	/^if_freenameindex(struct if_nameindex *ptr)$/;"	f
if_index	Stevens/key/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex
if_index	Stevens/lib/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex
if_index	Stevens/sctp/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex
if_indextoname	Stevens/lib/if_indextoname.c	/^if_indextoname(unsigned int index, char *name)$/;"	f
if_indextoname	Stevens/libroute/if_indextoname.c	/^if_indextoname(unsigned int idx, char *name)$/;"	f
if_name	Stevens/key/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex
if_name	Stevens/lib/unp.h	/^  char          *if_name;   \/* null-terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex
if_name	Stevens/sctp/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex
if_nameindex	Stevens/key/unp.h	/^struct if_nameindex {$/;"	s
if_nameindex	Stevens/lib/if_nameindex.c	/^if_nameindex(void)$/;"	f
if_nameindex	Stevens/lib/unp.h	/^struct if_nameindex {$/;"	s
if_nameindex	Stevens/libroute/if_nameindex.c	/^if_nameindex(void)$/;"	f
if_nameindex	Stevens/sctp/unp.h	/^struct if_nameindex {$/;"	s
if_nametoindex	Stevens/lib/if_nametoindex.c	/^if_nametoindex(const char *name)$/;"	f
if_nametoindex	Stevens/libroute/if_nametoindex.c	/^if_nametoindex(const char *name)$/;"	f
ifi_addr	Asgn2_code/unpifiplus.h	/^  struct sockaddr  *ifi_addr;	\/* primary address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_addr	Stevens/lib/unpifi.h	/^  struct sockaddr  *ifi_addr;	\/* primary address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_addr	assignment2/utils.h	/^        struct sockaddr_in      ifi_addr;	        \/* primary address              *\/$/;"	m	struct:InterfaceInfo	typeref:struct:InterfaceInfo::sockaddr_in
ifi_brdaddr	Asgn2_code/unpifiplus.h	/^  struct sockaddr  *ifi_brdaddr;\/* broadcast address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_brdaddr	Stevens/lib/unpifi.h	/^  struct sockaddr  *ifi_brdaddr;\/* broadcast address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_dstaddr	Asgn2_code/unpifiplus.h	/^  struct sockaddr  *ifi_dstaddr;\/* destination address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_dstaddr	Stevens/lib/unpifi.h	/^  struct sockaddr  *ifi_dstaddr;\/* destination address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_flags	Asgn2_code/unpifiplus.h	/^  short   ifi_flags;			\/* IFF_xxx constants from <net\/if.h> *\/$/;"	m	struct:ifi_info
ifi_flags	Stevens/lib/unpifi.h	/^  short   ifi_flags;			\/* IFF_xxx constants from <net\/if.h> *\/$/;"	m	struct:ifi_info
ifi_haddr	Asgn2_code/unpifiplus.h	/^  u_char  ifi_haddr[IFI_HADDR];	\/* hardware address *\/$/;"	m	struct:ifi_info
ifi_haddr	Stevens/lib/unpifi.h	/^  u_char  ifi_haddr[IFI_HADDR];	\/* hardware address *\/$/;"	m	struct:ifi_info
ifi_head	assignment2/utils.h	/^	struct InterfaceInfo	*ifi_head;$/;"	m	struct:servStruct	typeref:struct:servStruct::InterfaceInfo
ifi_head	assignment2/utils.h	/^	struct InterfaceInfo 	*ifi_head;		\/* head of interface linklist    *\/	 $/;"	m	struct:clientStruct	typeref:struct:clientStruct::InterfaceInfo
ifi_hlen	Asgn2_code/unpifiplus.h	/^  u_short ifi_hlen;				\/* # bytes in hardware address: 0, 6, 8 *\/$/;"	m	struct:ifi_info
ifi_hlen	Stevens/lib/unpifi.h	/^  u_short ifi_hlen;				\/* # bytes in hardware address: 0, 6, 8 *\/$/;"	m	struct:ifi_info
ifi_index	Asgn2_code/unpifiplus.h	/^  short   ifi_index;			\/* interface index *\/$/;"	m	struct:ifi_info
ifi_index	Stevens/lib/unpifi.h	/^  short   ifi_index;			\/* interface index *\/$/;"	m	struct:ifi_info
ifi_info	Asgn2_code/unpifiplus.h	/^struct ifi_info {$/;"	s
ifi_info	Stevens/lib/unpifi.h	/^struct ifi_info {$/;"	s
ifi_mtu	Asgn2_code/unpifiplus.h	/^  short   ifi_mtu;				\/* interface MTU *\/$/;"	m	struct:ifi_info
ifi_mtu	Stevens/lib/unpifi.h	/^  short   ifi_mtu;				\/* interface MTU *\/$/;"	m	struct:ifi_info
ifi_myflags	Asgn2_code/unpifiplus.h	/^  short   ifi_myflags;			\/* our own IFI_xxx flags *\/$/;"	m	struct:ifi_info
ifi_myflags	Stevens/lib/unpifi.h	/^  short   ifi_myflags;			\/* our own IFI_xxx flags *\/$/;"	m	struct:ifi_info
ifi_name	Asgn2_code/unpifiplus.h	/^  char    ifi_name[IFI_NAME];	\/* interface name, null-terminated *\/$/;"	m	struct:ifi_info
ifi_name	Stevens/lib/unpifi.h	/^  char    ifi_name[IFI_NAME];	\/* interface name, null-terminated *\/$/;"	m	struct:ifi_info
ifi_next	Asgn2_code/unpifiplus.h	/^  struct ifi_info  *ifi_next;	\/* next of these structures *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::ifi_info
ifi_next	Stevens/lib/unpifi.h	/^  struct ifi_info  *ifi_next;	\/* next of these structures *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::ifi_info
ifi_next	assignment2/utils.h	/^        struct InterfaceInfo	*ifi_next;	        \/* next of these structures     *\/$/;"	m	struct:InterfaceInfo	typeref:struct:InterfaceInfo::InterfaceInfo
ifi_ntmaddr	Asgn2_code/unpifiplus.h	/^  struct sockaddr  *ifi_ntmaddr;  \/* netmask address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr
ifi_ntmaddr	assignment2/utils.h	/^        struct sockaddr_in      ifi_ntmaddr;		\/* netmask address              *\/$/;"	m	struct:InterfaceInfo	typeref:struct:InterfaceInfo::sockaddr_in
ifi_subnetaddr	assignment2/utils.h	/^        struct sockaddr_in      ifi_subnetaddr;		\/* subnet address               *\/$/;"	m	struct:InterfaceInfo	typeref:struct:InterfaceInfo::sockaddr_in
iget	Stevens/server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
iget	Stevens/sigio/dgecho01.c	/^static int	iget;		\/* next one for main loop to process *\/$/;"	v	file:
ignorewerr	Stevens/sock/main.c	/^int		ignorewerr;			\/* true if write() errors should be ignored *\/$/;"	v
in6addr_any	Stevens/lib/in6addr_any.c	/^const struct in6_addr in6addr_any;$/;"	v	typeref:struct:in6_addr
in_cksum	Stevens/libfree/in_cksum.c	/^in_cksum(uint16_t *addr, int len)$/;"	f
in_cksum	Stevens/ping/bsdping.c	/^in_cksum(addr, len)$/;"	f
in_pktinfo	Stevens/key/unp.h	/^struct in_pktinfo {$/;"	s
in_pktinfo	Stevens/sctp/unp.h	/^struct in_pktinfo {$/;"	s
inet6_srcrt_print	Stevens/ipopts/sourceroute6.c	/^inet6_srcrt_print(void *ptr)$/;"	f
inet_aton	Stevens/libfree/inet_aton.c	/^inet_aton(const char *cp, struct in_addr *ap)$/;"	f
inet_ntop	Stevens/libfree/inet_ntop.c	/^inet_ntop(af, src, dst, size)$/;"	f
inet_ntop	Stevens/libfree/inet_ntop_ipv4.c	/^inet_ntop(int family, const void *addrptr, char *strptr, size_t len)$/;"	f
inet_ntop4	Stevens/libfree/inet_ntop.c	/^inet_ntop4(src, dst, size)$/;"	f	file:
inet_ntop6	Stevens/libfree/inet_ntop.c	/^inet_ntop6(src, dst, size)$/;"	f	file:
inet_pton	Stevens/libfree/inet_pton.c	/^inet_pton(af, src, dst)$/;"	f
inet_pton	Stevens/libfree/inet_pton_ipv4.c	/^inet_pton(int family, const char *strptr, void *addrptr)$/;"	f
inet_pton4	Stevens/libfree/inet_pton.c	/^inet_pton4(src, dst)$/;"	f	file:
inet_pton6	Stevens/libfree/inet_pton.c	/^inet_pton6(src, dst)$/;"	f	file:
inet_srcrt_add	Stevens/ipopts/sourceroute.c	/^inet_srcrt_add(char *hostptr)$/;"	f
inet_srcrt_init	Stevens/ipopts/sourceroute.c	/^inet_srcrt_init(int type)$/;"	f
inet_srcrt_print	Stevens/ipopts/sourceroute.c	/^inet_srcrt_print(u_char *ptr, int len)$/;"	f
infile	Stevens/threads/test04.c	/^static char	*infile;	\/* from argv[1]; read-only by threads *\/$/;"	v	file:
init_v6	Stevens/ping/init_v6.c	/^init_v6()$/;"	f
int_part	Stevens/ssntp/ntp.h	/^  uint16_t	int_part;$/;"	m	struct:s_fixedpt
int_part	Stevens/ssntp/ntp.h	/^  uint32_t	int_part;$/;"	m	struct:l_fixedpt
interfaceInfo	assignment2/utils.h	/^}interfaceInfo;$/;"	t	typeref:struct:InterfaceInfo
interval	Stevens/ping/bsdping.c	/^int interval = 1;		\/* interval between packets *\/$/;"	v
ip6_ctlun	Stevens/ping/old/ip6.h	/^    } ip6_ctlun;$/;"	m	struct:ip6hdr	typeref:union:ip6hdr::__anon2
ip6_dst	Stevens/ping/old/ip6.h	/^    struct in6_addr ip6_dst;		\/* destination address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr
ip6_flow	Stevens/ping/old/ip6.h	16;"	d
ip6_hlim	Stevens/ping/old/ip6.h	19;"	d
ip6_hops	Stevens/ping/old/ip6.h	20;"	d
ip6_nxt	Stevens/ping/old/ip6.h	18;"	d
ip6_plen	Stevens/ping/old/ip6.h	17;"	d
ip6_src	Stevens/ping/old/ip6.h	/^    struct in6_addr ip6_src;		\/* source address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr
ip6_vfc	Stevens/ping/old/ip6.h	15;"	d
ip6hdr	Stevens/ping/old/ip6.h	/^struct ip6hdr {$/;"	s
ip6hdrctl	Stevens/ping/old/ip6.h	/^	struct ip6hdrctl {$/;"	s	union:ip6hdr::__anon2
ipi_addr	Stevens/key/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr
ipi_addr	Stevens/lib/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:unp_in_pktinfo	typeref:struct:unp_in_pktinfo::in_addr
ipi_addr	Stevens/sctp/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr
ipi_ifindex	Stevens/key/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo
ipi_ifindex	Stevens/lib/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:unp_in_pktinfo
ipi_ifindex	Stevens/sctp/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo
iptos	Stevens/sock/main.c	/^int		iptos = -1;			\/* IP_TOS opton *\/$/;"	v
ipttl	Stevens/sock/main.c	/^int		ipttl = -1;			\/* IP_TTL opton *\/$/;"	v
iput	Stevens/server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
iput	Stevens/sigio/dgecho01.c	/^static int	iput;		\/* next one for signal handler to read into *\/$/;"	v	file:
isSent	assignment2/utils.h	/^	int	    isSent;					\/*  Sent Flag of Data Packet	    *\/$/;"	m	struct:SenderWinElem
isValid	assignment2/utils.h	/^	int	    isValid;					\/*  Check if Packet is present	    *\/$/;"	m	struct:RecvWinElem
is_readlock	Stevens/sock/ourhdr.h	98;"	d
is_writelock	Stevens/sock/ourhdr.h	100;"	d
jmpbuf	Stevens/bcast/dgclibcast5.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	Stevens/mcast/dgclimcast5.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	Stevens/mcast/dgclimcast6.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	Stevens/rtt/dg_send_recv.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	Stevens/udpcksum/udpcksum.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
join_mcast	Stevens/sock/multicast.c	/^join_mcast(int fd, struct sockaddr_in *sin)$/;"	f
joinip	Stevens/sock/main.c	/^char	joinip[32];			\/* multicast IP address, dotted-decimal string *\/$/;"	v
keepalive	Stevens/sock/main.c	/^int		keepalive;			\/* SO_KEEPALIVE *\/$/;"	v
key_print	Stevens/key/printsadbmsg.c	/^key_print(struct sadb_ext *ext)$/;"	f
l	Stevens/udpcksum/senddnsquery-libnet.c	/^static libnet_t *l;		\/* libnet descriptor *\/$/;"	v	file:
l_fixedpt	Stevens/ssntp/ntp.h	/^struct l_fixedpt {		\/* 64-bit fixed-point *\/$/;"	s
l_val	Stevens/sockopt/checkopts.c	/^  long				l_val;$/;"	m	union:val	file:
len	assignment2/utils.h	/^	int	len;						\/*  Length of the packet	    *\/$/;"	m	struct:Packet
len	assignment2/utils.h	/^	int	len;						\/* Size of payload			    *\/$/;"	m	struct:message
lenptr	Stevens/ipopts/sourceroute.c	/^static u_char	*lenptr;	\/* pointer to length byte in SRR option *\/$/;"	v	file:
lifetime_print	Stevens/key/printsadbmsg.c	/^lifetime_print(struct sadb_ext *ext)$/;"	f
linger	Stevens/sock/main.c	/^long	linger = -1;		\/* 0 or positive turns on option *\/$/;"	v
linger_val	Stevens/sockopt/checkopts.c	/^  struct linger		linger_val;$/;"	m	union:val	typeref:struct:val::linger	file:
listenInterfaces	assignment2/server.c	/^void listenInterfaces(struct servStruct *servInfo)$/;"	f
listenfd	Stevens/debug/test05.c	/^int		listenfd, connfd;$/;"	v
listenfd	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
listenfd	Stevens/oob/tcprecv01.c	/^int		listenfd, connfd;$/;"	v
listenfd	Stevens/oob/tcprecv05.c	/^int		listenfd, connfd;$/;"	v
listenfd	Stevens/server/pthread07.h	/^int				listenfd, nthreads;$/;"	v
listenfd	Stevens/server/pthread09.h	/^int				listenfd, nthreads;$/;"	v
listenq	Stevens/sock/main.c	/^int		listenq = 5;		\/* listen queue for TCP Server *\/$/;"	v
loadClientInfo	assignment2/utils.c	/^clientStruct * loadClientInfo()$/;"	f
loadServerInfo	assignment2/utils.c	/^servStruct * loadServerInfo()$/;"	f
local	Stevens/udpcksum/main.c	/^struct sockaddr	*dest, *local;$/;"	v	typeref:struct:
localip	Stevens/sock/main.c	/^char	localip[32];		\/* local IP address, dotted-decimal string *\/$/;"	v
locallen	Stevens/udpcksum/main.c	/^socklen_t		destlen, locallen;$/;"	v
locallookup	Stevens/udpcksum/main.c	/^struct sockaddr_in locallookup;$/;"	v	typeref:struct:sockaddr_in
lock_fd	Stevens/server/lock_fcntl.c	/^static int			lock_fd = -1;$/;"	v	file:
lock_it	Stevens/server/lock_fcntl.c	/^static struct flock	lock_it, unlock_it;$/;"	v	typeref:struct:flock	file:
loop	Stevens/mysdr/loop.c	/^loop(int sockfd, socklen_t salen)$/;"	f
loop	Stevens/sock/loop.c	/^loop(int sockfd)$/;"	f
loop_tcp	Stevens/sock/looptcp.c	/^loop_tcp(int sockfd)$/;"	f
loop_udp	Stevens/sock/loopudp.c	/^loop_udp(int sockfd)$/;"	f
lport	Stevens/icmpd/icmpd.h	/^  int	lport;			\/* local port bound to client's UDP socket *\/$/;"	m	struct:client
main	Stevens/advio/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/daytimeudpcli3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/daytimeudpcli4.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/old/test01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/tcpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/tcpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/tcpcli04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/tcpserv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpserv03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/advio/udpserv04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/bcast/udpcli06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/config.guess	/^		main()$/;"	f
main	Stevens/config.guess	/^	main ()$/;"	f
main	Stevens/config.guess	/^main ()$/;"	f
main	Stevens/debug/backlog.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/qlen.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/debug/test06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/icmpd/icmpd.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/icmpd/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/inetd/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/inetd/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/byteorder.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpcli1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpcli2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpcli3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpcliv6.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpsrv.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpsrv1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/intro/daytimetcpsrvv6.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ioctl/lsif01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ioctl/lsif02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ioctl/prifinfo.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ioctl/prmac.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ioctl/test1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ipopts/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ipopts/tcpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ipopts/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ipopts/udpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/key/add.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/key/dump.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/key/register.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/libfree/test_ascii2addr.c	/^main()$/;"	f
main	Stevens/libfree/test_getservbyname_r.c	/^main()$/;"	f
main	Stevens/libfree/test_inet_pton.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/libgai/test1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/libgai/testga.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mcast/main.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mcast/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mcast/udpcli05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mcast/udpcli06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mcast/udpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/mysdr/main.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpcli1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpcli2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpcli3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpsrv1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimetcpsrv4.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimeudpcli1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimeudpcli2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimeudpsrv2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/daytimeudpsrv3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/hostent.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/hostent2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/hostent3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/netent.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/prmyaddrs.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/prmyaddrs1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/test1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/names/test2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/tcpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/tcpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/tcpcli04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/tcpservselect03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/nonblock/web.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv03p.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcprecv06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpsend06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/oob/tcpserv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ping/bsdping.c	/^main(argc, argv)$/;"	f
main	Stevens/ping/main.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/checkudpsum.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/getrt.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/mynetstat.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/prifindex.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/prifinfo.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/prifname.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/route/prifnameindex.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/rtt/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpclient01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpclient02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpclient04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv07.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sctp/sctpserv_fork.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/select/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/select/tcpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/select/tcpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/client.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/clientrst.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv00.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv02m.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv03m.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv07.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv08.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/server/serv09.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sigio/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sigio/udpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sock/main.c	/^main(int argc, char *argv[])$/;"	f
main	Stevens/sockopt/checkopts.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sockopt/prdefaults.c	/^main()$/;"	f
main	Stevens/sockopt/rcvbuf.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sockopt/rcvbufset.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/sockopt/sockopt.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/ssntp/main.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/streams/stream_dg/client.c	/^main()$/;"	f
main	Stevens/streams/stream_dg/server.c	/^main()$/;"	f
main	Stevens/streams/strlist_sock.c	/^main(int argc, char *argv[])$/;"	f
main	Stevens/streams/strlist_xti.c	/^main(int argc, char *argv[])$/;"	f
main	Stevens/streams/tpi_daytime.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli07.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli08.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli09.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli10.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpcli11.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv08.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpserv09.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpservpoll01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tcpservselect01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/tcpcliserv/tsigpipe.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/accept_eintr.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/test1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/test2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/tisfdtype.c	/^main()$/;"	f
main	Stevens/test/treadline1.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/treadline2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/treadline3.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/tshutdown.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/test/tsnprintf.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/example01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/example02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/example03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/tcpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/tcpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/tcpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/tcpserv02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/test01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/test02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/test03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/test04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/test05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/web01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/web02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/threads/web03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/traceroute/main.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcksum/main.c	/^main(int argc, char *argv[])$/;"	f
main	Stevens/udpcliserv/udpcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli02.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli03.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli04.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli05.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli08.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli09.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpcli10.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpserv06.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpserv07.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/udpcliserv/udpservselect01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/mycat.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/openfile.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/testfcred.c	/^main()$/;"	f
main	Stevens/unixdomain/tfcred01.c	/^main()$/;"	f
main	Stevens/unixdomain/unixbind.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/unixdgcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/unixdgserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/unixstrcli01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/unixstrserv01.c	/^main(int argc, char **argv)$/;"	f
main	Stevens/unixdomain/unixstrserv02.c	/^main(int argc, char **argv)$/;"	f
main	assignment1/echo_cli.c	/^int main(int argc, char **argv)$/;"	f
main	assignment1/echo_srv.c	/^int main(int argc, char **argv)$/;"	f
main	assignment1/tcpechotimecli.c	/^int main(int argc, char **argv)$/;"	f
main	assignment1/tcpechotimesrv.c	/^int main(int argc, char **argv)$/;"	f
main	assignment1/test.c	/^int main(int argc, char * argv)$/;"	f
main	assignment1/time_cli.c	/^int main(int argc, char **argv)$/;"	f
main	assignment1/time_srv.c	/^int main(int argc, char **argv)$/;"	f
main	assignment2/client.c	/^int main(int argc, char **argv)$/;"	f
main	assignment2/server.c	/^int main(int argc, char **argv)$/;"	f
main1	Asgn2_code/prifinfo_plus.c	/^main1(int argc, char **argv)$/;"	f
mask	assignment2/utils.h	/^        int                     mask;                   \/* Subnet mask bits             *\/$/;"	m	struct:InterfaceInfo
max	Stevens/key/unp.h	205;"	d
max	Stevens/lib/unp.h	246;"	d
max	Stevens/sctp/unp.h	205;"	d
max	Stevens/sock/ourhdr.h	40;"	d
max_ttl	Stevens/traceroute/main.c	/^int		max_ttl = 30;$/;"	v
max_ttl	Stevens/traceroute/trace.h	/^int		 ttl, max_ttl;$/;"	v
maxfd	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
maxfd	Stevens/nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
maxi	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
maxnalarms	Stevens/oob/heartbeatserv.c	/^static int	maxnalarms;		\/* #alarms w\/no client probe before quit *\/$/;"	v	file:
maxnprobes	Stevens/oob/heartbeatcli.c	/^static int		maxnprobes;		\/* #probes w\/no response before quit *\/$/;"	v	file:
maxseg	Stevens/sock/main.c	/^int		maxseg;				\/* TCP_MAXSEG *\/$/;"	v
mcast_block_source	Stevens/lib/mcast_join.c	/^mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f
mcast_get_if	Stevens/lib/mcast_get_if.c	/^mcast_get_if(int sockfd)$/;"	f
mcast_get_loop	Stevens/lib/mcast_get_loop.c	/^mcast_get_loop(int sockfd)$/;"	f
mcast_get_ttl	Stevens/lib/mcast_get_ttl.c	/^mcast_get_ttl(int sockfd)$/;"	f
mcast_join	Stevens/lib/mcast_join.c	/^mcast_join(int sockfd, const SA *grp, socklen_t grplen,$/;"	f
mcast_join_source_group	Stevens/lib/mcast_join.c	/^mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f
mcast_leave	Stevens/lib/mcast_leave.c	/^mcast_leave(int sockfd, const SA *grp, socklen_t grplen)$/;"	f
mcast_leave_source_group	Stevens/lib/mcast_leave.c	/^mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f
mcast_set_if	Stevens/lib/mcast_set_if.c	/^mcast_set_if(int sockfd, const char *ifname, u_int ifindex)$/;"	f
mcast_set_loop	Stevens/lib/mcast_set_loop.c	/^mcast_set_loop(int sockfd, int onoff)$/;"	f
mcast_set_ttl	Stevens/lib/mcast_set_ttl.c	/^mcast_set_ttl(int sockfd, int val)$/;"	f
mcast_unblock_source	Stevens/lib/mcast_join.c	/^mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f
mcastttl	Stevens/sock/main.c	/^int		mcastttl;			\/* multicast TTL *\/$/;"	v
message	assignment2/utils.h	/^typedef struct message  {$/;"	s
meter	Stevens/server/meter.c	/^meter(int nchildren)$/;"	f
min	Stevens/key/unp.h	204;"	d
min	Stevens/lib/unp.h	245;"	d
min	Stevens/sctp/unp.h	204;"	d
min	Stevens/sock/ourhdr.h	39;"	d
mlock	Stevens/server/pthread07.h	/^pthread_mutex_t	mlock;$/;"	v
mlock	Stevens/server/serv07.c	/^pthread_mutex_t	mlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mptr	Stevens/server/lock_pthread.c	/^static pthread_mutex_t	*mptr;	\/* actual mutex will be in shared memory *\/$/;"	v	file:
msg	assignment2/utils.h	/^}msg;$/;"	t	typeref:struct:message
msg_type	assignment2/utils.h	/^        int msg_type;		                             \/* Determine type of message			       *\/$/;"	m	struct:header
msgpeek	Stevens/sock/main.c	/^int		msgpeek;			\/* MSG_PEEK *\/$/;"	v
msgrecv	Stevens/rtt/dg_send_recv.c	/^static struct msghdr	msgsend, msgrecv;	\/* assumed init to 0 *\/$/;"	v	typeref:struct:	file:
msgsend	Stevens/rtt/dg_send_recv.c	/^static struct msghdr	msgsend, msgrecv;	\/* assumed init to 0 *\/$/;"	v	typeref:struct:msghdr	file:
mx_dup_ck	Stevens/ping/bsdping.c	/^int mx_dup_ck = MAX_DUP_CHK;$/;"	v
my_addrs	Stevens/lib/my_addrs.c	/^my_addrs(int *addrtype)$/;"	f
my_addrs	Stevens/names/myaddrs1.c	/^my_addrs(int *addrtype)$/;"	f
my_key	Stevens/threads/test05.c	/^pthread_key_t	my_key;$/;"	v
my_lock_init	Stevens/server/lock_fcntl.c	/^my_lock_init(char *pathname)$/;"	f
my_lock_init	Stevens/server/lock_pthread.c	/^my_lock_init(char *pathname)$/;"	f
my_lock_release	Stevens/server/lock_fcntl.c	/^my_lock_release()$/;"	f
my_lock_release	Stevens/server/lock_pthread.c	/^my_lock_release()$/;"	f
my_lock_wait	Stevens/server/lock_fcntl.c	/^my_lock_wait()$/;"	f
my_lock_wait	Stevens/server/lock_pthread.c	/^my_lock_wait()$/;"	f
my_open	Stevens/unixdomain/myopen.c	/^my_open(const char *pathname, int mode)$/;"	f
my_read	Stevens/lib/readline.c	/^my_read(int fd, char *ptr)$/;"	f	file:
my_read	Stevens/test/readline2.c	/^my_read(int fd, char *ptr)$/;"	f	file:
my_read	Stevens/test/readline3.c	/^my_read(Rline *rptr, char *ptr)$/;"	f	file:
my_read	Stevens/threads/readline.c	/^my_read(Rline *tsd, int fd, char *ptr)$/;"	f	file:
my_read_r	Stevens/server/readline_r.c	/^my_read_r(Rline *rptr, char *ptr)$/;"	f	file:
mydg_echo	Stevens/advio/udpserv03.c	/^mydg_echo(int sockfd, SA *pcliaddr, socklen_t clilen, SA *myaddr)$/;"	f
mydg_echo	Stevens/advio/udpserv04.c	/^mydg_echo(int sockfd, SA *myaddr, socklen_t salen)$/;"	f
myfunc	Stevens/threads/test01.c	/^myfunc(void *ptr)$/;"	f
myfunc	Stevens/threads/test02.c	/^myfunc(void *ptr)$/;"	f
myfunc	Stevens/threads/test03.c	/^myfunc(void *ptr)$/;"	f
myfunc	Stevens/threads/test04.c	/^myfunc(void *ptr)$/;"	f
name	Stevens/key/name.c	/^	const char *name;$/;"	m	struct:idlist	file:
nbuf	Stevens/sock/main.c	/^int		nbuf = 1024;		\/* number of buffers to write (sink mode) *\/$/;"	v
nchildren	Stevens/server/serv02.c	/^static int		nchildren;$/;"	v	file:
nchildren	Stevens/server/serv02m.c	/^static int		nchildren;$/;"	v	file:
nchildren	Stevens/server/serv03.c	/^static int		nchildren;$/;"	v	file:
nchildren	Stevens/server/serv03m.c	/^static int		nchildren;$/;"	v	file:
nchildren	Stevens/server/serv04.c	/^static int		nchildren;$/;"	v	file:
nchildren	Stevens/server/serv05.c	/^static int		nchildren;$/;"	v	file:
nconn	Stevens/nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nconn	Stevens/threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nconn	Stevens/threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nconn	Stevens/threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
ndone	Stevens/threads/test03.c	/^int				ndone;$/;"	v
ndone	Stevens/threads/web02.c	/^int				ndone;		\/* number of terminated threads & mutex *\/$/;"	v
ndone	Stevens/threads/web03.c	/^int				ndone;		\/* number of terminated threads *\/$/;"	v
ndone_cond	Stevens/threads/test03.c	/^pthread_cond_t	ndone_cond = PTHREAD_COND_INITIALIZER;$/;"	v
ndone_cond	Stevens/threads/web03.c	/^pthread_cond_t	ndone_cond = PTHREAD_COND_INITIALIZER;$/;"	v
ndone_mutex	Stevens/threads/test03.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
ndone_mutex	Stevens/threads/web02.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
ndone_mutex	Stevens/threads/web03.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
net_bind	Stevens/streams/stream_dg/net_stream.c	/^net_bind (int fd, void *addr, int addrlen)$/;"	f
net_open	Stevens/streams/stream_dg/net_stream.c	/^net_open (char *path, int oflags, void *addr, int addrlen)$/;"	f
net_recv	Stevens/streams/stream_dg/net_stream.c	/^net_recv (int fd, char *buf, int len, char *from_addr, int addrlen)$/;"	f
net_rt_dump	Stevens/libroute/net_rt_dump.c	/^net_rt_dump(int family, int flags, size_t *lenp)$/;"	f
net_rt_iflist	Stevens/libroute/net_rt_iflist.c	/^net_rt_iflist(int family, int flags, size_t *lenp)$/;"	f
net_send	Stevens/streams/stream_dg/net_stream.c	/^net_send (int fd, char *buf, int len, char *to_addr, int addrlen)$/;"	f
newmask	Stevens/sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
next_connection	assignment2/utils.h	/^	struct existing_connections	*next_connection;	\/* next of these structures	 *\/$/;"	m	struct:existing_connections	typeref:struct:existing_connections::existing_connections
next_pcap	Stevens/udpcksum/pcap.c	/^next_pcap(int *len)$/;"	f
nfiles	Stevens/nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nfiles	Stevens/threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nfiles	Stevens/threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nfiles	Stevens/threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	Stevens/nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nlefttoconn	Stevens/threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	Stevens/threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	Stevens/threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	Stevens/nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nlefttoread	Stevens/threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	Stevens/threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	Stevens/threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nodelay	Stevens/sock/main.c	/^int		nodelay;			\/* TCP_NODELAY (Nagle algorithm) *\/$/;"	v
npackets	Stevens/ping/bsdping.c	/^long npackets;			\/* max packets to transmit *\/$/;"	v
nprobes	Stevens/oob/heartbeatcli.c	/^static int		nprobes;		\/* #probes since last server response *\/$/;"	v	file:
nprobes	Stevens/oob/heartbeatserv.c	/^static int	nprobes;		\/* #alarms since last client probe *\/$/;"	v	file:
nprobes	Stevens/traceroute/main.c	/^int		nprobes = 3;$/;"	v
nprobes	Stevens/traceroute/trace.h	/^int		 probe, nprobes;$/;"	v
nqueue	Stevens/sigio/dgecho01.c	/^static int	nqueue;		\/* # on queue for main loop to process *\/$/;"	v	file:
nready	Stevens/icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
nreceived	Stevens/ping/bsdping.c	/^long nreceived;			\/* # of packets we got back *\/$/;"	v
nrepeats	Stevens/ping/bsdping.c	/^long nrepeats;			\/* number of duplicates *\/$/;"	v
nsec	Stevens/oob/heartbeatcli.c	/^static int		nsec;			\/* #seconds betweeen each alarm *\/$/;"	v	file:
nsec	Stevens/oob/heartbeatserv.c	/^static int	nsec;			\/* #seconds between each alarm *\/$/;"	v	file:
nsent	Stevens/ping/ping.h	/^int		 nsent;				\/* add 1 for each sendto() *\/$/;"	v
nsent	Stevens/traceroute/trace.h	/^int		 nsent;				\/* add 1 for each sendto() *\/$/;"	v
nthreads	Stevens/server/pthread07.h	/^int				listenfd, nthreads;$/;"	v
nthreads	Stevens/server/pthread09.h	/^int				listenfd, nthreads;$/;"	v
nthreads	Stevens/server/serv08.c	/^static int			nthreads;$/;"	v	file:
ntpdata	Stevens/ssntp/ntp.h	/^struct ntpdata {		\/* NTP header *\/$/;"	s
ntransmitted	Stevens/ping/bsdping.c	/^long ntransmitted;		\/* sequence # for outbound packets = #sent *\/$/;"	v
ocnt	Stevens/ipopts/sourceroute.c	/^static int		ocnt;		\/* count of # addresses *\/$/;"	v	file:
oldmask	Stevens/sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
onalrm	Stevens/ping/bsdping.c	/^onalrm(signo)$/;"	f
onesbcast	Stevens/sock/main.c	/^int		onesbcast;			\/* set IP_ONESBCAST for 255.255.255.255 bcasts *\/$/;"	v
oninfo	Stevens/ping/bsdping.c	/^oninfo(notused)$/;"	f
onint	Stevens/ping/bsdping.c	/^onint(notused)$/;"	f
open_output	Stevens/udpcksum/senddnsquery-libnet.c	/^open_output(void)$/;"	f
open_output	Stevens/udpcksum/udpwrite.c	/^open_output(void)$/;"	f
open_pcap	Stevens/udpcksum/pcap.c	/^open_pcap(void)$/;"	f
opt_level	Stevens/sockopt/checkopts.c	/^  int		opt_level;$/;"	m	struct:sock_opts	file:
opt_name	Stevens/sockopt/checkopts.c	/^  int		opt_name;$/;"	m	struct:sock_opts	file:
opt_str	Stevens/sockopt/checkopts.c	/^  const char	   *opt_str;$/;"	m	struct:sock_opts	file:
opt_val_str	Stevens/sockopt/checkopts.c	/^  char   *(*opt_val_str)(union val *, int);$/;"	m	struct:sock_opts	file:
options	Stevens/ping/bsdping.c	/^u_int options;$/;"	v
optr	Stevens/ipopts/sourceroute.c	/^static u_char	*optr;		\/* pointer into options being formed *\/$/;"	v	file:
optr	Stevens/sock/sourceroute.c	/^u_char	*optr;				\/* pointer into options being formed *\/$/;"	v
org	Stevens/ssntp/ntp.h	/^  struct l_fixedpt	org;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt
outpack	Stevens/ping/bsdping.c	/^u_char outpack[MAXPACKET];$/;"	v
pack	assignment2/utils.h	/^	packet	    pack;					\/*  Data Packet			    *\/$/;"	m	struct:RecvWinElem
pack	assignment2/utils.h	/^	packet	    pack;					\/*  Data Packet			    *\/$/;"	m	struct:SenderWinElem
packet	assignment2/utils.h	/^} packet;$/;"	t	typeref:struct:Packet
parent_alrm	Stevens/debug/backlog.c	/^parent_alrm(int signo)$/;"	f
parent_alrm	Stevens/debug/qlen.c	/^parent_alrm(int signo)$/;"	f
pattern	Stevens/sock/pattern.c	/^pattern(char *ptr, int len)$/;"	f
pattern	Stevens/sock/sourcesink.c	/^pattern(char *ptr, int len)$/;"	f
pauseclose	Stevens/sock/main.c	/^int		pauseclose;			\/* #ms to sleep after recv FIN, before close *\/$/;"	v
pauseinit	Stevens/sock/main.c	/^int		pauseinit;			\/* #ms to sleep before first read *\/$/;"	v
pauselisten	Stevens/sock/main.c	/^int		pauselisten;		\/* #ms to sleep after listen() *\/$/;"	v
pauserw	Stevens/sock/main.c	/^int		pauserw;			\/* #ms to sleep before each read or write *\/$/;"	v
payload	assignment2/utils.h	/^	char	payload[PAYLOAD_CHUNK_SIZE];			\/*  Data of the packet		    *\/$/;"	m	struct:Packet
payload	assignment2/utils.h	/^        char    payload[PAYLOAD_CHUNK_SIZE];                    \/* Actual Data bytes to be sent.	    *\/$/;"	m	struct:message
pd	Stevens/udpcksum/main.c	/^pcap_t *pd;				\/* packet capture struct pointer *\/$/;"	v
pdapi_recvmsg	Stevens/sctp/sctp_pdapircv.c	/^pdapi_recvmsg(int sock_fd,$/;"	f
pfd	Stevens/debug/backlog.c	12;"	d	file:
pfd	Stevens/debug/qlen.c	12;"	d	file:
pid	Stevens/debug/backlog.c	/^pid_t				pid;	\/* of child *\/$/;"	v
pid	Stevens/debug/qlen.c	/^pid_t				pid;	\/* of child *\/$/;"	v
pid	Stevens/ping/ping.h	/^pid_t	 pid;				\/* our PID *\/$/;"	v
pid	Stevens/traceroute/trace.h	/^pid_t	 pid;				\/* our PID *\/$/;"	v
pids	Stevens/server/serv02.c	/^static pid_t	*pids;$/;"	v	file:
pids	Stevens/server/serv02m.c	/^static pid_t	*pids;$/;"	v	file:
pids	Stevens/server/serv03.c	/^static pid_t	*pids;$/;"	v	file:
pids	Stevens/server/serv03m.c	/^static pid_t	*pids;$/;"	v	file:
pids	Stevens/server/serv04.c	/^static pid_t	*pids;$/;"	v	file:
ping_v4	Stevens/ping/ping_v4.c	/^ping_v4(struct hostent *hptr)$/;"	f
pinger	Stevens/ping/bsdping.c	/^pinger()$/;"	f
pipefd	Stevens/bcast/dgclibcast6.c	/^static int	pipefd[2];$/;"	v	file:
pipefd	Stevens/debug/backlog.c	/^int			pipefd[2];$/;"	v
pipefd	Stevens/debug/qlen.c	/^int			pipefd[2];$/;"	v
pname	Stevens/sock/error.c	/^char	*pname = NULL;		\/* caller can set this from argv[0] *\/$/;"	v
port	Stevens/sock/main.c	/^char	*port;$/;"	v
ppid	assignment1/echo_cli.c	/^int ppid;$/;"	v
ppid	assignment1/time_cli.c	/^int ppid;$/;"	v
ppoll	Stevens/ssntp/ntp.h	/^  u_char			ppoll;$/;"	m	struct:ntpdata
pr	Stevens/ping/ping.h	/^} *pr;$/;"	v	typeref:struct:proto
pr	Stevens/traceroute/trace.h	/^} *pr;$/;"	v	typeref:struct:proto
pr_addr	Stevens/ping/bsdping.c	/^pr_addr(l)$/;"	f
pr_cpu_time	Stevens/server/pr_cpu_time.c	/^pr_cpu_time(void)$/;"	f
pr_icmph	Stevens/ping/bsdping.c	/^pr_icmph(icp)$/;"	f
pr_iflist	Stevens/route/mynetstat.c	/^pr_iflist(int family)$/;"	f
pr_iph	Stevens/ping/bsdping.c	/^pr_iph(ip)$/;"	f
pr_ipv4	Stevens/names/hostent3.c	/^pr_ipv4(char **listptr)$/;"	f
pr_pack	Stevens/ping/bsdping.c	/^pr_pack(buf, cc, from)$/;"	f
pr_retip	Stevens/ping/bsdping.c	/^pr_retip(ip)$/;"	f
pr_rtable	Stevens/route/mynetstat.c	/^pr_rtable(int family)$/;"	f
precision	Stevens/ssntp/ntp.h	/^  int				precision:8;$/;"	m	struct:ntpdata
prefix_all	Stevens/key/add.c	/^prefix_all(struct sockaddr *sa)$/;"	f
print_notification	Stevens/sctp/sctp_displayevents.c	/^print_notification(char *notify_buf)$/;"	f
print_sadb_msg	Stevens/key/printsadbmsg.c	/^print_sadb_msg(struct sadb_msg *msg, int msglen)$/;"	f
probe	Stevens/traceroute/trace.h	/^int		 probe, nprobes;$/;"	v
proc_v4	Stevens/ping/proc_v4.c	/^proc_v4(char *ptr, ssize_t len, struct msghdr *msg, struct timeval *tvrecv)$/;"	f
proc_v6	Stevens/ping/proc_v6.c	/^proc_v6(char *ptr, ssize_t len, struct msghdr *msg, struct timeval* tvrecv)$/;"	f
produce	Stevens/threads/example03.c	/^produce(struct buf_t *bptr, int val)$/;"	f
produce_loop	Stevens/threads/example03.c	/^produce_loop(void *vptr)$/;"	f
proto	Stevens/ping/ping.h	/^struct proto {$/;"	s
proto	Stevens/traceroute/trace.h	/^struct proto {$/;"	s
proto_v4	Stevens/ping/main.c	/^struct proto	proto_v4 = { proc_v4, send_v4, NULL, NULL, NULL, 0, IPPROTO_ICMP };$/;"	v	typeref:struct:proto
proto_v4	Stevens/traceroute/main.c	/^struct proto	proto_v4 = { icmpcode_v4, recv_v4, NULL, NULL, NULL, NULL, 0,$/;"	v	typeref:struct:proto
proto_v6	Stevens/ping/main.c	/^struct proto	proto_v6 = { proc_v6, send_v6, init_v6, NULL, NULL, 0, IPPROTO_ICMPV6 };$/;"	v	typeref:struct:proto
proto_v6	Stevens/traceroute/main.c	/^struct proto	proto_v6 = { icmpcode_v6, recv_v6, NULL, NULL, NULL, NULL, 0,$/;"	v	typeref:struct:proto
pselect	Stevens/lib/pselect.c	/^pselect(int nfds, fd_set *rset, fd_set *wset, fd_set *xset,$/;"	f
pthread_create	Stevens/configure	/^pthread_create ();$/;"	f
rawfd	Stevens/udpcksum/main.c	/^int		rawfd;			\/* raw socket to write on *\/$/;"	v
rawfd	Stevens/udpcksum/udpwrite.c	/^int		rawfd;			\/* raw socket to write on *\/$/;"	v
rbuf	Stevens/sock/main.c	/^char   *rbuf;				\/* pointer that is malloc'ed *\/$/;"	v
rcsid	Stevens/libfree/inet_ntop.c	/^static char rcsid[] = "$Id: inet_ntop.c,v 1.1.1.1 2002\/11\/14 03:33:35 fenner Exp $";$/;"	v	file:
rcsid	Stevens/libfree/inet_pton.c	/^static char rcsid[] = "$Id: inet_pton.c,v 1.1.1.1 2002\/11\/14 03:33:35 fenner Exp $";$/;"	v	file:
rcvbuflen	Stevens/sock/main.c	/^int		rcvbuflen;			\/* size for SO_RCVBUF *\/$/;"	v
rcvd_tbl	Stevens/ping/bsdping.c	/^char rcvd_tbl[MAX_DUP_CHK \/ 8];$/;"	v
rcvtimeo	Stevens/sock/main.c	/^long	rcvtimeo;			\/* SO_RCVTIMEO *\/$/;"	v
readData	assignment2/utils.c	/^void* readData(struct msghdr *messageHeader)$/;"	f
readHeader	assignment2/utils.c	/^hdr* readHeader(struct msghdr *messageHeader)$/;"	f
read_buf	Stevens/lib/readline.c	/^static char	read_buf[MAXLINE];$/;"	v	file:
read_cnt	Stevens/lib/readline.c	/^static int	read_cnt;$/;"	v	file:
read_cred	Stevens/unixdomain/readcred.c	/^read_cred(int fd, void *ptr, size_t nbytes, struct cmsgcred *cmsgcredptr)$/;"	f
read_fd	Stevens/lib/read_fd.c	/^read_fd(int fd, void *ptr, size_t nbytes, int *recvfd)$/;"	f
read_fd	Stevens/server/readline_r.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon7
read_fd	Stevens/test/readline.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon9
read_lock	Stevens/sock/ourhdr.h	84;"	d
read_maxlen	Stevens/server/readline_r.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon7
read_maxlen	Stevens/test/readline.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon9
read_ptr	Stevens/lib/readline.c	/^static char	*read_ptr;$/;"	v	file:
read_ptr	Stevens/server/readline_r.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon7
read_ptr	Stevens/test/readline.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon9
readable_conn	Stevens/icmpd/readable_conn.c	/^readable_conn(int i)$/;"	f
readable_listen	Stevens/icmpd/readable_listen.c	/^readable_listen(void)$/;"	f
readable_timeo	Stevens/lib/readable_timeo.c	/^readable_timeo(int fd, int sec)$/;"	f
readable_v4	Stevens/icmpd/readable_v4.c	/^readable_v4(void)$/;"	f
readable_v6	Stevens/icmpd/readable_v6.c	/^readable_v6(void)$/;"	f
readlen	Stevens/sock/main.c	/^int		readlen = 1024;		\/* default read length for socket *\/$/;"	v
readline	Stevens/lib/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f
readline	Stevens/server/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f
readline	Stevens/test/readline1.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f
readline	Stevens/test/readline2.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f
readline	Stevens/threads/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f
readline_destructor	Stevens/threads/readline.c	/^readline_destructor(void *ptr)$/;"	f	file:
readline_once	Stevens/threads/readline.c	/^readline_once(void)$/;"	f	file:
readline_r	Stevens/server/readline_r.c	/^readline_r(Rline *rptr)$/;"	f
readline_r	Stevens/test/readline3.c	/^readline_r(Rline *rptr)$/;"	f
readline_rinit	Stevens/server/readline_r.c	/^readline_rinit(int fd, void *ptr, size_t maxlen, Rline *rptr)$/;"	f
readline_rinit	Stevens/test/readline3.c	/^readline_rinit(int fd, void *ptr, size_t maxlen, Rline *rptr)$/;"	f
readlinebuf	Stevens/lib/readline.c	/^readlinebuf(void **vptrptr)$/;"	f
readloop	Stevens/ping/readloop.c	/^readloop(void)$/;"	f
readn	Stevens/lib/readn.c	/^readn(int fd, void *vptr, size_t n)$/;"	f
readpacketidx	assignment2/utils.h	/^	int		readpacketidx;				\/*  Oldest Packet to read to output *\/$/;"	m	struct:ReceiverQueue
readw_lock	Stevens/sock/ourhdr.h	86;"	d
rec	Stevens/ssntp/ntp.h	/^  struct l_fixedpt	rec;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt
rec	Stevens/traceroute/trace.h	/^struct rec {					\/* format of outgoing UDP data *\/$/;"	s
rec_Window	assignment2/utils.h	/^	int 			rec_Window;		\/* Recieving sliding window size *\/$/;"	m	struct:clientStruct
rec_seq	Stevens/traceroute/trace.h	/^  u_short	rec_seq;			\/* sequence number *\/$/;"	m	struct:rec
rec_ttl	Stevens/traceroute/trace.h	/^  u_short	rec_ttl;			\/* TTL packet left with *\/$/;"	m	struct:rec
rec_tv	Stevens/traceroute/trace.h	/^  struct timeval	rec_tv;		\/* time packet left *\/$/;"	m	struct:rec	typeref:struct:rec::timeval
recv	Stevens/key/unp.h	71;"	d
recv	Stevens/key/unp.h	73;"	d
recv	Stevens/lib/unp.h	90;"	d
recv	Stevens/lib/unp.h	92;"	d
recv	Stevens/sctp/unp.h	64;"	d
recv	Stevens/sctp/unp.h	66;"	d
recv	Stevens/traceroute/trace.h	/^  int	 (*recv)(int, struct timeval *);$/;"	m	struct:proto
recvFile	assignment2/client.c	/^void recvFile(int sockfd)$/;"	f
recvQ	assignment2/utils.h	/^} recvQ;$/;"	t	typeref:struct:ReceiverQueue
recvWinElem	assignment2/utils.h	/^} recvWinElem;$/;"	t	typeref:struct:RecvWinElem
recv_all	Stevens/mcast/recv.c	/^recv_all(int recvfd, socklen_t salen)$/;"	f
recv_cred	Stevens/unixdomain/tfcred01.c	/^recv_cred(int fd, void *ptr, size_t nbytes, struct fcred *fcredptr)$/;"	f
recv_rate	assignment2/utils.h	/^	int 			recv_rate; 		\/* mean rate in ms		 *\/$/;"	m	struct:clientStruct
recv_v4	Stevens/traceroute/recv_v4.c	/^recv_v4(int seq, struct timeval *tv)$/;"	f
recv_v6	Stevens/traceroute/recv_v6.c	/^recv_v6(int seq, struct timeval *tv)$/;"	f
recvbuf	Stevens/traceroute/trace.h	/^char	 recvbuf[BUFSIZE];$/;"	v
recvdstaddr	Stevens/sock/main.c	/^int		recvdstaddr;		\/* IP_RECVDSTADDR option *\/$/;"	v
recvfd	Stevens/traceroute/trace.h	/^int		 sendfd, recvfd;	\/* send on UDP sock, read on raw ICMP sock *\/$/;"	v
recvfrom_alarm	Stevens/bcast/dgclibcast1.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/bcast/dgclibcast2.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/bcast/dgclibcast3.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/bcast/dgclibcast4.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/bcast/dgclibcast5.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/bcast/dgclibcast6.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/mcast/dgclibcast1.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/mcast/dgclimcast5.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_alarm	Stevens/mcast/dgclimcast6.c	/^recvfrom_alarm(int signo)$/;"	f	file:
recvfrom_flags	Stevens/advio/old/recvfromflags.c	/^recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f
recvfrom_flags	Stevens/advio/recvfromflags.c	/^recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f
recvfrom_int	Stevens/udpcliserv/dgecholoop1.c	/^recvfrom_int(int signo)$/;"	f	file:
recvfrom_int	Stevens/udpcliserv/dgecholoop2.c	/^recvfrom_int(int signo)$/;"	f	file:
recvhdr	Stevens/rtt/dg_send_recv.c	/^} sendhdr, recvhdr;$/;"	v	typeref:struct:hdr	file:
refid	Stevens/ssntp/ntp.h	/^  uint32_t			refid;$/;"	m	struct:ntpdata
reftime	Stevens/ssntp/ntp.h	/^  struct l_fixedpt	reftime;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt
res_init	Stevens/configure	/^res_init ();$/;"	f
result	Stevens/tcpcliserv/sum.h	/^struct result {$/;"	s
retranx	assignment2/utils.h	/^	int	retranx;					\/*  Retransmission Count	    *\/$/;"	m	struct:Packet
reuseaddr	Stevens/sock/main.c	/^int		reuseaddr;			\/* SO_REUSEADDR *\/$/;"	v
reuseport	Stevens/sock/main.c	/^int		reuseport;			\/* SO_REUSEPORT *\/$/;"	v
rl_buf	Stevens/server/readline_r.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon7
rl_buf	Stevens/test/readline.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon9
rl_buf	Stevens/threads/readline.c	/^  char	 rl_buf[MAXLINE];$/;"	m	struct:__anon10	file:
rl_bufptr	Stevens/server/readline_r.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon7
rl_bufptr	Stevens/test/readline.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon9
rl_bufptr	Stevens/threads/readline.c	/^  char	*rl_bufptr;			\/* initialize to rl_buf *\/$/;"	m	struct:__anon10	file:
rl_cnt	Stevens/server/readline_r.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon7
rl_cnt	Stevens/test/readline.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon9
rl_cnt	Stevens/threads/readline.c	/^  int	 rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon10	file:
rl_key	Stevens/threads/readline.c	/^static pthread_key_t	rl_key;$/;"	v	file:
rl_once	Stevens/threads/readline.c	/^static pthread_once_t	rl_once = PTHREAD_ONCE_INIT;$/;"	v	file:
rset	Stevens/icmpd/icmpd.h	/^fd_set			rset, allset;$/;"	v
rset	Stevens/nonblock/web.h	/^fd_set	rset, wset;$/;"	v
rtt_base	Stevens/lib/unprtt.h	/^  uint32_t	rtt_base;	\/* # sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info
rtt_base	Stevens/rtt/unprtt.h	/^  uint32_t	rtt_base;	\/* #sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info
rtt_d_flag	Stevens/lib/rtt.c	/^int rtt_d_flag = 0;		\/* debug flag; can be set by caller *\/$/;"	v
rtt_debug	Stevens/lib/rtt.c	/^rtt_debug(struct rtt_info *ptr)$/;"	f
rtt_info	Stevens/lib/unprtt.h	/^struct rtt_info {$/;"	s
rtt_info	Stevens/rtt/unprtt.h	/^struct rtt_info {$/;"	s
rtt_init	Stevens/lib/rtt.c	/^rtt_init(struct rtt_info *ptr)$/;"	f
rtt_minmax	Stevens/lib/rtt.c	/^rtt_minmax(uint32_t rto)$/;"	f	file:
rtt_newpack	Stevens/lib/rtt.c	/^rtt_newpack(struct rtt_info *ptr)$/;"	f
rtt_nrexmt	Stevens/lib/unprtt.h	/^  int		rtt_nrexmt;	\/* # times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info
rtt_nrexmt	Stevens/rtt/unprtt.h	/^  int		rtt_nrexmt;	\/* #times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info
rtt_rto	Stevens/lib/unprtt.h	/^  uint32_t	rtt_rto;	\/* current RTO to use, in seconds *\/$/;"	m	struct:rtt_info
rtt_rto	Stevens/rtt/unprtt.h	/^  float		rtt_rto;	\/* current RTO to use, seconds *\/$/;"	m	struct:rtt_info
rtt_rtt	Stevens/lib/unprtt.h	/^  uint32_t	rtt_rtt;	\/* most recent measured RTT, in seconds *\/$/;"	m	struct:rtt_info
rtt_rtt	Stevens/rtt/unprtt.h	/^  float		rtt_rtt;	\/* most recent measured RTT, seconds *\/$/;"	m	struct:rtt_info
rtt_rttvar	Stevens/lib/unprtt.h	/^  uint32_t	rtt_rttvar;	\/* smoothed mean deviation, in seconds *\/$/;"	m	struct:rtt_info
rtt_rttvar	Stevens/rtt/unprtt.h	/^  float		rtt_rttvar;	\/* smoothed mean deviation, seconds *\/$/;"	m	struct:rtt_info
rtt_srtt	Stevens/lib/unprtt.h	/^  uint32_t	rtt_srtt;	\/* smoothed RTT estimator, in seconds *\/$/;"	m	struct:rtt_info
rtt_srtt	Stevens/rtt/unprtt.h	/^  float		rtt_srtt;	\/* smoothed RTT estimator, seconds *\/$/;"	m	struct:rtt_info
rtt_start	Stevens/lib/rtt.c	/^rtt_start(struct rtt_info *ptr)$/;"	f
rtt_stop	Stevens/lib/rtt.c	/^rtt_stop(struct rtt_info *ptr, uint32_t ms)$/;"	f
rtt_timeout	Stevens/lib/rtt.c	/^rtt_timeout(struct rtt_info *ptr)$/;"	f
rtt_ts	Stevens/lib/rtt.c	/^rtt_ts(struct rtt_info *ptr)$/;"	f
rttinfo	Stevens/rtt/dg_send_recv.c	/^static struct rtt_info   rttinfo;$/;"	v	typeref:struct:rtt_info	file:
rttinit	Stevens/rtt/dg_send_recv.c	/^static int	rttinit = 0;$/;"	v	file:
s	Stevens/ping/bsdping.c	/^int s;				\/* socket file descriptor *\/$/;"	v
s_fixedpt	Stevens/ssntp/ntp.h	/^struct s_fixedpt {		\/* 32-bit fixed-point *\/$/;"	s
sa_print	Stevens/key/printsadbmsg.c	/^sa_print(struct sadb_ext *ext)$/;"	f
sabind	Stevens/traceroute/trace.h	/^  struct sockaddr  *sabind;	\/* sockaddr{} for binding source port *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
sadb_add	Stevens/key/add.c	/^sadb_add(struct sockaddr *src, struct sockaddr *dst, int type, int alg,$/;"	f
sadb_dump	Stevens/key/dump.c	/^sadb_dump(int type)$/;"	f
sadb_register	Stevens/key/register.c	/^sadb_register(int type)$/;"	f
salast	Stevens/traceroute/trace.h	/^  struct sockaddr  *salast;	\/* last sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
salen	Stevens/key/add.c	/^salen(struct sockaddr *sa)$/;"	f
salen	Stevens/ping/ping.h	/^  socklen_t	    salen;		\/* length of sockaddr{}s *\/$/;"	m	struct:proto
salen	Stevens/traceroute/trace.h	/^  socklen_t   		salen;	\/* length of sockaddr{}s *\/$/;"	m	struct:proto
sarecv	Stevens/ping/ping.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
sarecv	Stevens/traceroute/trace.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
sasend	Stevens/ping/ping.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
sasend	Stevens/traceroute/trace.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr
satype	Stevens/key/name.c	/^static struct idlist satype[] = {$/;"	v	typeref:struct:idlist	file:
sccsid	Stevens/ping/bsdping.c	/^static char sccsid[] = "@(#)ping.c	8.1 (Berkeley) 6\/5\/93";$/;"	v	file:
sctp_address_to_associd	Stevens/sctp/sctp_addr_to_associd.c	/^sctp_address_to_associd(int sock_fd, struct sockaddr *sa, socklen_t salen)$/;"	f
sctp_bind_arg_list	Stevens/sctp/sctp_bindargs.c	/^sctp_bind_arg_list(int sock_fd, char **argv, int argc)$/;"	f
sctp_get_no_strms	Stevens/sctp/sctp_getnostrm.c	/^sctp_get_no_strms(int sock_fd,struct sockaddr *to, socklen_t tolen)$/;"	f
sctp_pdapi_rdbuf_sz	Stevens/sctp/sctp_pdapircv.c	/^static int sctp_pdapi_rdbuf_sz=0;$/;"	v	file:
sctp_pdapi_readbuf	Stevens/sctp/sctp_pdapircv.c	/^static uint8_t *sctp_pdapi_readbuf=NULL;$/;"	v	file:
sctp_print_addresses	Stevens/sctp/sctp_print_addrs.c	/^sctp_print_addresses(struct sockaddr_storage *addrs, int num)$/;"	f
sctpstr_cli	Stevens/sctp/sctp_strcli.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f
sctpstr_cli	Stevens/sctp/sctp_strcli1.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f
sctpstr_cli	Stevens/sctp/sctp_strcli_un.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f
sctpstr_cli_echoall	Stevens/sctp/sctp_strcliecho.c	/^sctpstr_cli_echoall(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f
sctpstr_cli_echoall	Stevens/sctp/sctp_strcliecho2.c	/^sctpstr_cli_echoall(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f
search	Stevens/libgai/gai_hdr.h	/^struct search {$/;"	s
search	Stevens/libgai/old/savecopy.c	/^struct search {$/;"	s	file:
seed	assignment2/utils.h	/^	int 			seed;			\/* Random generator seed value 	 *\/$/;"	m	struct:clientStruct
send	Stevens/key/unp.h	72;"	d
send	Stevens/key/unp.h	74;"	d
send	Stevens/lib/unp.h	91;"	d
send	Stevens/lib/unp.h	93;"	d
send	Stevens/sctp/unp.h	65;"	d
send	Stevens/sctp/unp.h	67;"	d
send	Stevens/sock/ourhdr.h	22;"	d
sendFile	assignment2/server.c	/^void sendFile(int sockfd, char filename[496])$/;"	f
sendQ	assignment2/utils.h	/^} sendQ;$/;"	t	typeref:struct:SenderQueue
sendWinElem	assignment2/utils.h	/^} sendWinElem;$/;"	t	typeref:struct:SenderWinElem
send_Window	assignment2/utils.h	/^	int 			send_Window;		\/* MaxSending sliding win size  *\/$/;"	m	struct:servStruct
send_all	Stevens/mcast/send.c	/^send_all(int sendfd, SA *sadest, socklen_t salen)$/;"	f
send_dns_query	Stevens/udpcksum/senddnsquery-libnet.c	/^send_dns_query(void)$/;"	f
send_dns_query	Stevens/udpcksum/senddnsquery-raw.c	/^send_dns_query(void)$/;"	f
send_v4	Stevens/ping/send_v4.c	/^send_v4(void)$/;"	f
send_v6	Stevens/ping/send_v6.c	/^send_v6()$/;"	f
sendbuf	Stevens/ping/ping.h	/^char	 sendbuf[BUFSIZE];$/;"	v
sendbuf	Stevens/traceroute/trace.h	/^char	 sendbuf[BUFSIZE];$/;"	v
sendfd	Stevens/traceroute/trace.h	/^int		 sendfd, recvfd;	\/* send on UDP sock, read on raw ICMP sock *\/$/;"	v
sendhdr	Stevens/rtt/dg_send_recv.c	/^} sendhdr, recvhdr;$/;"	v	typeref:struct:hdr	file:
sendto_01	Stevens/test/test1.c	/^sendto_01()$/;"	f
sentstartidx	assignment2/utils.h	/^	int		sentstartidx;				\/*  Oldest Packet sent to output    *\/$/;"	m	struct:SenderQueue
seq	Stevens/rtt/dg_send_recv.c	/^  uint32_t	seq;	\/* sequence # *\/$/;"	m	struct:hdr	file:
seq_num	assignment2/utils.h	/^        int seq_num;		                             \/* sequence no\/next expected seq no depending on msg_type *\/$/;"	m	struct:header
seqnum	assignment2/utils.h	/^	int	seqnum;						\/*  Sequence Number of Packet	    *\/$/;"	m	struct:Packet
serv	Stevens/debug/backlog.c	/^struct sockaddr_in	serv;$/;"	v	typeref:struct:sockaddr_in
serv	Stevens/debug/qlen.c	/^struct sockaddr_in	serv;$/;"	v	typeref:struct:sockaddr_in
servStruct	assignment2/utils.h	/^typedef struct servStruct {$/;"	s
servStruct	assignment2/utils.h	/^} servStruct;$/;"	t	typeref:struct:servStruct
serv_addr	assignment2/utils.h	/^	struct sockaddr_in		serv_addr;		\/* IP address of server		 *\/$/;"	m	struct:existing_connections	typeref:struct:existing_connections::sockaddr_in
serv_addr	assignment2/utils.h	/^	struct sockaddr_in 	serv_addr;		\/* IP address of server		 *\/$/;"	m	struct:clientStruct	typeref:struct:clientStruct::sockaddr_in
serv_portNum	assignment2/utils.h	/^	int				serv_portNum;		\/* Server port number		 *\/$/;"	m	struct:existing_connections
serv_portNum	assignment2/utils.h	/^	int 			serv_portNum;		\/* Server port number		 *\/$/;"	m	struct:clientStruct
serv_portNum	assignment2/utils.h	/^	int 			serv_portNum;		\/* Well know server port number *\/$/;"	m	struct:servStruct
servaddr	Stevens/sock/main.c	/^struct sockaddr_in	cliaddr, servaddr;$/;"	v	typeref:struct:
servaddr	Stevens/test/test1.c	/^struct sockaddr_in	servaddr, cliaddr;$/;"	v	typeref:struct:sockaddr_in
server	Stevens/sock/main.c	/^int		server;				\/* to act as server requires -s option *\/$/;"	v
serverListen	assignment1/tcpechotimesrv.c	/^int serverListen(int portNum)$/;"	f
servfd	Stevens/oob/heartbeatcli.c	/^static int		servfd;$/;"	v	file:
servfd	Stevens/oob/heartbeatserv.c	/^static int	servfd;$/;"	v	file:
servopen	Stevens/sock/servopen.c	/^servopen(char *host, char *port)$/;"	f
sig_alrm	Stevens/advio/dgclitimeo3.c	/^sig_alrm(int signo)$/;"	f	file:
sig_alrm	Stevens/debug/test04.c	/^sig_alrm(int signo)$/;"	f
sig_alrm	Stevens/oob/heartbeatcli.c	/^sig_alrm(int signo)$/;"	f	file:
sig_alrm	Stevens/oob/heartbeatserv.c	/^sig_alrm(int signo)$/;"	f	file:
sig_alrm	Stevens/ping/sig_alrm.c	/^sig_alrm(int signo)$/;"	f
sig_alrm	Stevens/rtt/dg_send_recv.c	/^sig_alrm(int signo)$/;"	f	file:
sig_alrm	Stevens/tcpcliserv/tcpcli07.c	/^sig_alrm(int signo)$/;"	f
sig_alrm	Stevens/traceroute/sig_alrm.c	/^sig_alrm(int signo)$/;"	f
sig_alrm	Stevens/udpcksum/udpcksum.c	/^sig_alrm(int signo)$/;"	f
sig_catch	Stevens/sock/loop.c	/^sig_catch(int signo)$/;"	f
sig_chld	Stevens/advio/sig_chld_waitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/ipopts/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/oob/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/server/sig_chld_waitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/tcpcliserv/sigchldwait.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/tcpcliserv/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/udpcliserv/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f
sig_chld	Stevens/unixdomain/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f
sig_hup	Stevens/sigio/dgecho01.c	/^sig_hup(int signo)$/;"	f	file:
sig_int	Stevens/server/serv00.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv01.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv02.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv02m.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv03.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv03m.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv04.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv05.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv06.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv07.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv08.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/server/serv09.c	/^sig_int(int signo)$/;"	f
sig_int	Stevens/test/accept_eintr.c	/^sig_int(int signo)$/;"	f
sig_io	Stevens/sigio/dgecho01.c	/^sig_io(int signo)$/;"	f	file:
sig_pipe	Stevens/tcpcliserv/tsigpipe.c	/^sig_pipe(int signo)$/;"	f
sig_poll	Stevens/debug/test05.c	/^sig_poll(int signo)$/;"	f
sig_urg	Stevens/oob/heartbeatcli.c	/^sig_urg(int signo)$/;"	f	file:
sig_urg	Stevens/oob/heartbeatserv.c	/^sig_urg(int signo)$/;"	f	file:
sig_urg	Stevens/oob/tcprecv01.c	/^sig_urg(int signo)$/;"	f
sig_urg	Stevens/oob/tcprecv05.c	/^sig_urg(int signo)$/;"	f
sig_usr	Stevens/sock/tellwait.c	/^sig_usr(int signo)	\/* one signal handler for SIGUSR1 and SIGUSR2 *\/$/;"	f	file:
sigflag	Stevens/sock/tellwait.c	/^static volatile sig_atomic_t	sigflag;$/;"	v	file:
sigint_handler	assignment1/echo_cli.c	/^void sigint_handler(int signo)$/;"	f
sigint_handler	assignment1/time_cli.c	/^void sigint_handler(int signo)$/;"	f
sigio	Stevens/sock/main.c	/^int		sigio;				\/* send SIGIO *\/$/;"	v
sigio_func	Stevens/sock/sockopts.c	/^sigio_func(int signo)$/;"	f	file:
signal	Stevens/lib/signal.c	/^signal(int signo, Sigfunc *func)$/;"	f
signal_intr	Stevens/lib/signal_intr.c	/^signal_intr(int signo, Sigfunc *func)$/;"	f
sink	Stevens/sock/sourcesink.c	/^sink(int sockfd)$/;"	f
sink_tcp	Stevens/sock/sinktcp.c	/^sink_tcp(int sockfd)$/;"	f
sink_udp	Stevens/sock/sinkudp.c	/^sink_udp(int sockfd)	\/* TODO: use recvfrom ?? *\/$/;"	f
sleep_us	Stevens/sock/sleepus.c	/^sleep_us(unsigned int nusecs)$/;"	f
slidwinsize	assignment2/utils.h	/^	int		slidwinsize;				\/*  Sliding Window Size		    *\/$/;"	m	struct:SenderQueue
slidwinstart	assignment2/utils.h	/^	int		slidwinstart;				\/*  Sliding Window Start	    *\/$/;"	m	struct:SenderQueue
snaplen	Stevens/udpcksum/main.c	/^int		snaplen = 200;	\/* amount of data to capture *\/$/;"	v
sndbuflen	Stevens/sock/main.c	/^int		sndbuflen;			\/* size for SO_SNDBUF *\/$/;"	v
sndtimeo	Stevens/sock/main.c	/^long	sndtimeo;			\/* SO_SNDTIMEO *\/$/;"	v
snprintf	Stevens/lib/snprintf.c	/^snprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f
sntp_proc	Stevens/ssntp/sntp_proc.c	/^sntp_proc(char *buf, ssize_t n, struct timeval *nowptr)$/;"	f
sock_bind_wild	Stevens/lib/sock_bind_wild.c	/^sock_bind_wild(int sockfd, int family)$/;"	f
sock_cmp_addr	Stevens/lib/sock_cmp_addr.c	/^sock_cmp_addr(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f
sock_cmp_port	Stevens/lib/sock_cmp_port.c	/^sock_cmp_port(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f
sock_get_port	Stevens/lib/sock_get_port.c	/^sock_get_port(const struct sockaddr *sa, socklen_t salen)$/;"	f
sock_masktop	Stevens/libroute/sock_masktop.c	/^sock_masktop(SA *sa, socklen_t salen)$/;"	f
sock_ntop	Stevens/lib/sock_ntop.c	/^sock_ntop(const struct sockaddr *sa, socklen_t salen)$/;"	f
sock_ntop_host	Stevens/lib/sock_ntop_host.c	/^sock_ntop_host(const struct sockaddr *sa, socklen_t salen)$/;"	f
sock_opts	Stevens/sockopt/checkopts.c	/^struct sock_opts {$/;"	s	file:
sock_opts	Stevens/sockopt/checkopts.c	/^} sock_opts[] = {$/;"	v	typeref:struct:sock_opts
sock_set_addr	Stevens/lib/sock_set_addr.c	/^sock_set_addr(struct sockaddr *sa, socklen_t salen, const void *addr)$/;"	f
sock_set_port	Stevens/lib/sock_set_port.c	/^sock_set_port(struct sockaddr *sa, socklen_t salen, int port)$/;"	f
sock_set_wild	Stevens/lib/sock_set_wild.c	/^sock_set_wild(struct sockaddr *sa, socklen_t salen)$/;"	f
sock_str_flag	Stevens/sockopt/checkopts.c	/^sock_str_flag(union val *ptr, int len)$/;"	f	file:
sock_str_int	Stevens/sockopt/checkopts.c	/^sock_str_int(union val *ptr, int len)$/;"	f	file:
sock_str_linger	Stevens/sockopt/checkopts.c	/^sock_str_linger(union val *ptr, int len)$/;"	f	file:
sock_str_timeval	Stevens/sockopt/checkopts.c	/^sock_str_timeval(union val *ptr, int len)$/;"	f	file:
sockaddr_storage	Stevens/lib/unp.h	/^struct sockaddr_storage {$/;"	s
sockatmark	Stevens/lib/sockatmark.c	/^sockatmark(int fd)$/;"	f
socket	Stevens/configure	/^socket ();$/;"	f
sockfd	Stevens/ping/ping.h	/^int		 sockfd;$/;"	v
sockfd	Stevens/sigio/dgecho01.c	/^static int		sockfd;$/;"	v	file:
sockfd	Stevens/threads/strclithread.c	/^static int	sockfd;		\/* global for both threads to access *\/$/;"	v	file:
sockfd	Stevens/threads/strclithread2.c	/^static int	sockfd;$/;"	v	file:
sockfd	assignment2/utils.h	/^	int			sockfd;                 \/* socket file descriptor       *\/$/;"	m	struct:InterfaceInfo
sockfd_to_family	Stevens/lib/sockfd_to_family.c	/^sockfd_to_family(int sockfd)$/;"	f
sockopts	Stevens/sock/sockopts.c	/^sockopts(int sockfd, int doall)$/;"	f
source_tcp	Stevens/sock/sourcetcp.c	/^source_tcp(int sockfd)$/;"	f
source_udp	Stevens/sock/sourceudp.c	/^source_udp(int sockfd)	\/* TODO: use sendto ?? *\/$/;"	f
sourcesink	Stevens/sock/main.c	/^int		sourcesink;			\/* source\/sink mode *\/$/;"	v
sport	Stevens/traceroute/trace.h	/^u_short	 sport, dport;$/;"	v
sroute_cnt	Stevens/sock/main.c	/^int		sroute_cnt;			\/* count of #IP addresses in route *\/$/;"	v
sroute_doopt	Stevens/sock/sourceroute.c	/^sroute_doopt(int strict, char *argptr)$/;"	f
sroute_opt	Stevens/sock/sourceroute.c	/^u_char	sroute_opt[44];		\/* some implementations require this to be$/;"	v
sroute_set	Stevens/sock/sourceroute.c	/^sroute_set(int sockfd)$/;"	f
ss_family	Stevens/lib/unp.h	/^	sa_family_t	ss_family;$/;"	m	struct:sockaddr_storage
ss_len	Stevens/lib/unp.h	/^	u_char		ss_len;$/;"	m	struct:sockaddr_storage
ssize_t	Stevens/sock/ourhdr.h	/^typedef	int	ssize_t;$/;"	t
start_connect	Stevens/nonblock/start_connect.c	/^start_connect(struct file *fptr)$/;"	f
start_echoClient	assignment1/echo_cli.c	/^void start_echoClient(char *ipAddress, int portNum)$/;"	f
start_echoServer	assignment1/echo_srv.c	/^void start_echoServer(int portNum)$/;"	f
start_timeClient	assignment1/time_cli.c	/^void start_timeClient(char *ipAddress, int portNum)$/;"	f
start_timeServer	assignment1/time_srv.c	/^void start_timeServer(int portNum)$/;"	f
status	Stevens/ssntp/ntp.h	/^  u_char			status;$/;"	m	struct:ntpdata
str_cli	Stevens/advio/str_cli_kqueue04.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/advio/str_cli_poll03.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/advio/str_cli_select02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/lib/str_cli.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/nonblock/strclifork.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/nonblock/strclinonb.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/oob/strcliselect02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/select/strcliselect01.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/select/strcliselect02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/tcpcliserv/str_cli08.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/tcpcliserv/str_cli09.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/tcpcliserv/str_cli11.c	/^str_cli(FILE *fp, int sockfd)$/;"	f
str_cli	Stevens/threads/strclithread.c	/^str_cli(FILE *fp_arg, int sockfd_arg)$/;"	f
str_cli	Stevens/threads/strclithread2.c	/^str_cli(FILE *fp_arg, int sockfd_arg)$/;"	f
str_echo	Stevens/advio/str_echo_stdio02.c	/^str_echo(int sockfd)$/;"	f
str_echo	Stevens/lib/str_echo.c	/^str_echo(int sockfd)$/;"	f
str_echo	Stevens/oob/strecho02.c	/^str_echo(int sockfd)$/;"	f
str_echo	Stevens/tcpcliserv/str_echo08.c	/^str_echo(int sockfd)$/;"	f
str_echo	Stevens/tcpcliserv/str_echo09.c	/^str_echo(int sockfd)$/;"	f
str_echo	Stevens/unixdomain/strecho.c	/^str_echo(int sockfd)$/;"	f
str_echoCli	assignment1/echo_cli.c	/^void str_echoCli(FILE *fp, int sockFD)$/;"	f
str_echoSrv	assignment1/echo_srv.c	/^str_echoSrv(int sockFD)$/;"	f
str_echoSrv	assignment1/tcpechotimesrv.c	/^str_echoSrv(int sockFD)$/;"	f
str_fam	Stevens/libgai/testga.c	/^str_fam(int family)$/;"	f	file:
str_sock	Stevens/libgai/testga.c	/^str_sock(int socktype)$/;"	f	file:
stratum	Stevens/ssntp/ntp.h	/^  u_char			stratum;$/;"	m	struct:ntpdata
strerror	Stevens/sock/strerror.c	/^strerror(int error)$/;"	f
strres	Stevens/sockopt/checkopts.c	/^static char	strres[128];$/;"	v	file:
sum	Stevens/tcpcliserv/sum.h	/^  long	sum;$/;"	m	struct:result
summary	Stevens/ping/bsdping.c	/^summary()$/;"	f
supported_print	Stevens/key/printsadbmsg.c	/^supported_print(struct sadb_ext *ext)$/;"	f
t_open	Stevens/configure	/^t_open ();$/;"	f
t_scalar_t	Stevens/sparc64-unknown-freebsd5.1/config.h	293;"	d
t_uscalar_t	Stevens/sparc64-unknown-freebsd5.1/config.h	296;"	d
tcp_connect	Stevens/lib/tcp_connect.c	/^tcp_connect(const char *host, const char *serv)$/;"	f
tcp_listen	Stevens/lib/tcp_listen.c	/^tcp_listen(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
test_udp	Stevens/udpcksum/udpcksum.c	/^test_udp(void)$/;"	f
thread_count	Stevens/server/pthread07.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon4
thread_count	Stevens/server/pthread08.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon5
thread_count	Stevens/server/pthread09.h	/^  long			thread_count;	\/* #connections handled *\/$/;"	m	struct:__anon6
thread_main	Stevens/server/pthread07.c	/^thread_main(void *arg)$/;"	f
thread_main	Stevens/server/pthread08.c	/^thread_main(void *arg)$/;"	f
thread_main	Stevens/server/pthread09.c	/^thread_main(void *arg)$/;"	f
thread_make	Stevens/server/pthread07.c	/^thread_make(int i)$/;"	f
thread_make	Stevens/server/pthread08.c	/^thread_make(int i)$/;"	f
thread_make	Stevens/server/pthread09.c	/^thread_make(int i)$/;"	f
thread_tid	Stevens/server/pthread07.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon4
thread_tid	Stevens/server/pthread08.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon5
thread_tid	Stevens/server/pthread09.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon6
timeSrv	assignment1/tcpechotimesrv.c	/^void * timeSrv(void *arg)$/;"	f
timespec	Stevens/key/unp.h	/^struct timespec {$/;"	s
timespec	Stevens/lib/unp.h	/^struct timespec {$/;"	s
timespec	Stevens/sctp/unp.h	/^struct timespec {$/;"	s
timestamp	assignment2/utils.h	/^        uint32_t timestamp;                                  \/* Time Stamp					       *\/$/;"	m	struct:header
timeval_val	Stevens/sockopt/checkopts.c	/^  struct timeval	timeval_val;$/;"	m	union:val	typeref:struct:val::timeval	file:
timing	Stevens/ping/bsdping.c	/^int timing;			\/* flag to do timing *\/$/;"	v
tmax	Stevens/ping/bsdping.c	/^double tmax = 0.0;		\/* maximum round trip time *\/$/;"	v
tmin	Stevens/ping/bsdping.c	/^double tmin = 999999999.0;	\/* minimum round trip time *\/$/;"	v
tpi_bind	Stevens/streams/tpi_bind.c	/^tpi_bind(int fd, const void *addr, size_t addrlen)$/;"	f
tpi_close	Stevens/streams/tpi_close.c	/^tpi_close(int fd)$/;"	f
tpi_connect	Stevens/streams/tpi_connect.c	/^tpi_connect(int fd, const void *addr, size_t addrlen)$/;"	f
tpi_read	Stevens/streams/tpi_read.c	/^tpi_read(int fd, void *buf, size_t len)$/;"	f
tptr	Stevens/server/pthread07.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
tptr	Stevens/server/pthread08.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
tptr	Stevens/server/pthread09.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
traceloop	Stevens/traceroute/traceloop.c	/^traceloop(void)$/;"	f
ts	Stevens/rtt/dg_send_recv.c	/^  uint32_t	ts;		\/* timestamp when sent *\/$/;"	m	struct:hdr	file:
tsum	Stevens/ping/bsdping.c	/^double tsum = 0.0;		\/* sum of all times, for doing average *\/$/;"	v
ttab	Stevens/ping/bsdping.c	/^static char *ttab[] = {$/;"	v	file:
ttl	Stevens/traceroute/trace.h	/^int		 ttl, max_ttl;$/;"	v
ttllevel	Stevens/traceroute/trace.h	/^  int	   ttllevel;		\/* setsockopt() level to set TTL *\/$/;"	m	struct:proto
ttloptname	Stevens/traceroute/trace.h	/^  int	   ttloptname;		\/* setsockopt() name to set TTL *\/$/;"	m	struct:proto
tv_nsec	Stevens/key/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec
tv_nsec	Stevens/lib/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec
tv_nsec	Stevens/sctp/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec
tv_sec	Stevens/key/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_sec	Stevens/lib/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_sec	Stevens/sctp/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_sub	Stevens/lib/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f
tv_sub	Stevens/ping/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f
tv_sub	Stevens/traceroute/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f
tvsub	Stevens/ping/bsdping.c	/^tvsub(out, in)$/;"	f
udp	Stevens/sock/main.c	/^int		udp;				\/* use UDP instead of TCP *\/$/;"	v
udp_01	Stevens/test/test1.c	/^udp_01()$/;"	f
udp_check	Stevens/udpcksum/udpread.c	/^udp_check(char *ptr, int len)$/;"	f
udp_client	Stevens/lib/udp_client.c	/^udp_client(const char *host, const char *serv, SA **saptr, socklen_t *lenp)$/;"	f
udp_client	Stevens/test/test2.c	/^udp_client(const char *host, const char *serv, void **saptr, socklen_t *lenp)$/;"	f
udp_connect	Stevens/lib/udp_connect.c	/^udp_connect(const char *host, const char *serv)$/;"	f
udp_read	Stevens/udpcksum/udpread.c	/^udp_read(void)$/;"	f
udp_server	Stevens/lib/udp_server.c	/^udp_server(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
udp_server_reuseaddr	Stevens/names/udp_server_reuseaddr.c	/^udp_server_reuseaddr(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f
udp_write	Stevens/udpcksum/udpwrite.c	/^udp_write(char *buf, int userlen)$/;"	f
un_ctl6	Stevens/ping/old/ip6.h	/^	} un_ctl6;$/;"	m	union:ip6hdr::__anon2	typeref:struct:ip6hdr::__anon2::ip6hdrctl
un_data16	Stevens/ping/old/icmp6.h	/^	u_int16_t	un_data16[2];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1
un_data32	Stevens/ping/old/icmp6.h	/^	u_int32_t	un_data32[1];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1
un_data8	Stevens/ping/old/icmp6.h	/^	u_int8_t	un_data8[4];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1
un_lock	Stevens/sock/ourhdr.h	92;"	d
un_vfc	Stevens/ping/old/ip6.h	/^	u_int8_t un_vfc;		\/* 4 bits version, 4 bits reserved *\/$/;"	m	union:ip6hdr::__anon2
unlock_it	Stevens/server/lock_fcntl.c	/^static struct flock	lock_it, unlock_it;$/;"	v	typeref:struct:	file:
unp_in_pktinfo	Stevens/lib/unp.h	/^struct unp_in_pktinfo {$/;"	s
urgwrite	Stevens/sock/main.c	/^int		urgwrite;			\/* write urgent byte after this write *\/$/;"	v
usage	Stevens/libgai/testga.c	/^usage(const char *msg)$/;"	f	file:
usage	Stevens/ping/bsdping.c	/^usage()$/;"	f
usage	Stevens/sock/main.c	/^usage(const char *msg)$/;"	f	file:
usage	Stevens/test/test1.c	/^usage(const char *msg)$/;"	f	file:
usage	Stevens/udpcksum/main.c	/^usage(const char *msg)$/;"	f	file:
usewritev	Stevens/sock/main.c	/^int		usewritev;			\/* use writev() instead of write() *\/$/;"	v
val	Stevens/key/name.c	/^	int val;$/;"	m	struct:idlist	file:
val	Stevens/sockopt/checkopts.c	/^union val {$/;"	u	file:
val	Stevens/sockopt/checkopts.c	/^} val;$/;"	v	typeref:union:val
verbose	Stevens/ping/ping.h	/^int		 verbose;$/;"	v
verbose	Stevens/sock/main.c	/^int		verbose;			\/* each -v increments this by 1 *\/$/;"	v
verbose	Stevens/test/test1.c	/^int		verbose;$/;"	v
verbose	Stevens/traceroute/trace.h	/^int		 verbose;$/;"	v
verbose	Stevens/udpcksum/main.c	/^int		verbose;$/;"	v
vflag	Stevens/libgai/testga.c	/^int		vflag;$/;"	v
wbuf	Stevens/sock/main.c	/^char   *wbuf;				\/* pointer that is malloc'ed *\/$/;"	v
web_child	Stevens/server/web_child.c	/^web_child(int sockfd)$/;"	f
web_child	Stevens/server/web_child_r.c	/^web_child(int sockfd)$/;"	f
whereto	Stevens/ping/bsdping.c	/^struct sockaddr whereto;	\/* who to ping *\/$/;"	v	typeref:struct:sockaddr
winsize	assignment2/utils.h	/^	int		winsize;				\/*  Queue Size			    *\/$/;"	m	struct:ReceiverQueue
winsize	assignment2/utils.h	/^	int		winsize;				\/*  Queue Size			    *\/$/;"	m	struct:SenderQueue
writable_timeo	Stevens/lib/writable_timeo.c	/^writable_timeo(int fd, int sec)$/;"	f
write_fd	Stevens/lib/write_fd.c	/^write_fd(int fd, void *ptr, size_t nbytes, int sendfd)$/;"	f
write_get_cmd	Stevens/nonblock/write_get_cmd.c	/^write_get_cmd(struct file *fptr)$/;"	f
write_get_cmd	Stevens/threads/web01.c	/^write_get_cmd(struct file *fptr)$/;"	f
write_get_cmd	Stevens/threads/web02.c	/^write_get_cmd(struct file *fptr)$/;"	f
write_get_cmd	Stevens/threads/web03.c	/^write_get_cmd(struct file *fptr)$/;"	f
write_lock	Stevens/sock/ourhdr.h	88;"	d
writelen	Stevens/sock/main.c	/^int		writelen = 1024;	\/* default write length for socket *\/$/;"	v
writen	Stevens/lib/writen.c	/^writen(int fd, const void *vptr, size_t n)$/;"	f
writen	Stevens/sock/writen.c	/^writen(int fd, const void *vptr, size_t n)$/;"	f
writew_lock	Stevens/sock/ourhdr.h	90;"	d
wset	Stevens/nonblock/web.h	/^fd_set	rset, wset;$/;"	v
xmt	Stevens/ssntp/ntp.h	/^  struct l_fixedpt	xmt;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt
zeromask	Stevens/sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
zerosum	Stevens/udpcksum/main.c	/^int		zerosum;		\/* send UDP query with no checksum *\/$/;"	v
